; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5

target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-p7:160:256:256:32-p8:128:128-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7:8:9"
target triple = "amdgcn-amd-amdhsa"

; Test basic offload sanitizer trap instrumentation.

; RUN: opt < %s -passes=offload-sanitizer -S | FileCheck --check-prefixes=CHECK %s

define void @test_trap1() {
; CHECK-LABEL: define void @test_trap1() {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[PC:%.*]] = call i64 @llvm.amdgcn.s.getpc()
; CHECK-NEXT:    call void @__offload_san_trap_info(i64 [[PC]])
; CHECK-NEXT:    call void @llvm.trap()
; CHECK-NEXT:    ret void
;
entry:
  call void @llvm.trap()
  ret void
}

define void @test_trap2() {
; CHECK-LABEL: define void @test_trap2() {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[PC:%.*]] = call i64 @llvm.amdgcn.s.getpc()
; CHECK-NEXT:    call void @__offload_san_trap_info(i64 [[PC]])
; CHECK-NEXT:    call void @llvm.trap()
; CHECK-NEXT:    unreachable
;
entry:
  call void @llvm.trap()
  unreachable
}

define void @test_trap3(i1 %c) {
; CHECK-LABEL: define void @test_trap3(
; CHECK-SAME: i1 [[C:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    br i1 [[C]], label %[[T:.*]], label %[[F:.*]]
; CHECK:       [[T]]:
; CHECK-NEXT:    [[PC:%.*]] = call i64 @llvm.amdgcn.s.getpc()
; CHECK-NEXT:    call void @__offload_san_trap_info(i64 [[PC]])
; CHECK-NEXT:    call void @llvm.trap()
; CHECK-NEXT:    unreachable
; CHECK:       [[F]]:
; CHECK-NEXT:    ret void
;
entry:
  br i1 %c, label %t ,label %f
t:
  call void @llvm.trap()
  unreachable
f:
  ret void
}

define void @test_unreachable1() {
; CHECK-LABEL: define void @test_unreachable1() {
; CHECK-NEXT:    [[PC:%.*]] = call i64 @llvm.amdgcn.s.getpc()
; CHECK-NEXT:    call void @__offload_san_unreachable_info(i64 [[PC]])
; CHECK-NEXT:    unreachable
;
  unreachable
}

define void @test_unreachable2(i1 %c) {
; CHECK-LABEL: define void @test_unreachable2(
; CHECK-SAME: i1 [[C:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    br i1 [[C]], label %[[T:.*]], label %[[F:.*]]
; CHECK:       [[T]]:
; CHECK-NEXT:    [[PC:%.*]] = call i64 @llvm.amdgcn.s.getpc()
; CHECK-NEXT:    call void @__offload_san_unreachable_info(i64 [[PC]])
; CHECK-NEXT:    unreachable
; CHECK:       [[F]]:
; CHECK-NEXT:    ret void
;
entry:
  br i1 %c, label %t ,label %f
t:
  unreachable
f:
  ret void
}
