; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=ve -mattr=+vpu | FileCheck %s

; This would assert because VE specified that all setcc
; nodes (even with vector operands) return a scalar value.

define <4 x i8> @udiv_by_minus_one(<4 x i8> %x) {
; CHECK-LABEL: udiv_by_minus_one:
; CHECK:       # %bb.0:
; CHECK-NEXT:    or %s0, 0, (0)1
; CHECK-NEXT:    or %s1, 0, (0)1
; CHECK-NEXT:    or %s2, 0, (0)1
; CHECK-NEXT:    or %s3, 0, (0)1
; CHECK-NEXT:    b.l.t (, %s10)
  %r = udiv <4 x i8> %x, <i8 255, i8 255, i8 255, i8 255>
  ret <4 x i8> %r
}

define <4 x i8> @urem_by_minus_one(<4 x i8> %x) {
; CHECK-LABEL: urem_by_minus_one:
; CHECK:       # %bb.0:
; CHECK-NEXT:    and %s0, %s0, (56)0
; CHECK-NEXT:    and %s1, %s1, (56)0
; CHECK-NEXT:    and %s2, %s2, (56)0
; CHECK-NEXT:    and %s3, %s3, (56)0
; CHECK-NEXT:    b.l.t (, %s10)
  %r = urem <4 x i8> %x, <i8 255, i8 255, i8 255, i8 255>
  ret <4 x i8> %r
}
