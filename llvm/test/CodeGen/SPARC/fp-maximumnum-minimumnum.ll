; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc --mtriple=sparc64 < %s | FileCheck %s --check-prefix=SPARC64
; RUN: llc --mtriple=sparc < %s | FileCheck %s --check-prefix=SPARC

declare float @llvm.maximumnum.f32(float, float)
declare double @llvm.maximumnum.f64(double, double)
declare float @llvm.minimumnum.f32(float, float)
declare double @llvm.minimumnum.f64(double, double)

define float @maximumnum_float(float %x, float %y) {
;
; SPARC64-LABEL: maximumnum_float:
; SPARC64:         .cfi_startproc
; SPARC64-NEXT:  ! %bb.0:
; SPARC64-NEXT:    add %sp, -144, %sp
; SPARC64-NEXT:    .cfi_def_cfa_register %fp
; SPARC64-NEXT:    .cfi_window_save
; SPARC64-NEXT:    .cfi_register %o7, %i7
; SPARC64-NEXT:    mov %g0, %o0
; SPARC64-NEXT:    mov %g0, %o1
; SPARC64-NEXT:    fcmps %fcc0, %f1, %f1
; SPARC64-NEXT:    fmovsu %fcc0, %f3, %f1
; SPARC64-NEXT:    st %f1, [%sp+2187]
; SPARC64-NEXT:    fcmps %fcc0, %f3, %f3
; SPARC64-NEXT:    fmovsu %fcc0, %f1, %f3
; SPARC64-NEXT:    st %f3, [%sp+2183]
; SPARC64-NEXT:    fcmps %fcc0, %f1, %f3
; SPARC64-NEXT:    fmovs %f3, %f0
; SPARC64-NEXT:    fmovsg %fcc0, %f1, %f0
; SPARC64-NEXT:    ld [%sp+2187], %o2
; SPARC64-NEXT:    fadds %f0, %f0, %f2
; SPARC64-NEXT:    fcmps %fcc0, %f0, %f0
; SPARC64-NEXT:    fmovsu %fcc0, %f2, %f0
; SPARC64-NEXT:    cmp %o2, 0
; SPARC64-NEXT:    ld [%sp+2183], %o2
; SPARC64-NEXT:    move %icc, 1, %o0
; SPARC64-NEXT:    cmp %o0, 0
; SPARC64-NEXT:    fmovs %f0, %f2
; SPARC64-NEXT:    fmovsne %icc, %f1, %f2
; SPARC64-NEXT:    cmp %o2, 0
; SPARC64-NEXT:    sethi %h44(.LCPI0_0), %o0
; SPARC64-NEXT:    add %o0, %m44(.LCPI0_0), %o0
; SPARC64-NEXT:    sllx %o0, 12, %o0
; SPARC64-NEXT:    ld [%o0+%l44(.LCPI0_0)], %f1
; SPARC64-NEXT:    move %icc, 1, %o1
; SPARC64-NEXT:    cmp %o1, 0
; SPARC64-NEXT:    fmovsne %icc, %f3, %f2
; SPARC64-NEXT:    fcmps %fcc0, %f0, %f1
; SPARC64-NEXT:    fmovse %fcc0, %f2, %f0
; SPARC64-NEXT:    retl
; SPARC64-NEXT:    add %sp, 144, %sp
;
; SPARC-LABEL: maximumnum_float:
; SPARC:         .cfi_startproc
; SPARC-NEXT:  ! %bb.0:
; SPARC-NEXT:    add %sp, -112, %sp
; SPARC-NEXT:    .cfi_def_cfa_register %fp
; SPARC-NEXT:    .cfi_window_save
; SPARC-NEXT:    .cfi_register %o7, %i7
; SPARC-NEXT:    st %o0, [%sp+104]
; SPARC-NEXT:    st %o1, [%sp+108]
; SPARC-NEXT:    ld [%sp+104], %f0
; SPARC-NEXT:    ld [%sp+108], %f2
; SPARC-NEXT:    fcmps %f0, %f0
; SPARC-NEXT:    nop
; SPARC-NEXT:    fmovs %f2, %f1
; SPARC-NEXT:    fbu .LBB0_2
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.1:
; SPARC-NEXT:    fmovs %f0, %f1
; SPARC-NEXT:  .LBB0_2:
; SPARC-NEXT:    fcmps %f2, %f2
; SPARC-NEXT:    nop
; SPARC-NEXT:    st %f1, [%sp+100]
; SPARC-NEXT:    fmovs %f1, %f0
; SPARC-NEXT:    fbu .LBB0_4
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.3:
; SPARC-NEXT:    fmovs %f2, %f0
; SPARC-NEXT:  .LBB0_4:
; SPARC-NEXT:    fcmps %f1, %f0
; SPARC-NEXT:    nop
; SPARC-NEXT:    st %f0, [%sp+96]
; SPARC-NEXT:    fmovs %f1, %f2
; SPARC-NEXT:    fbg .LBB0_6
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.5:
; SPARC-NEXT:    fmovs %f0, %f2
; SPARC-NEXT:  .LBB0_6:
; SPARC-NEXT:    fcmps %f2, %f2
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbo .LBB0_8
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.7:
; SPARC-NEXT:    fadds %f2, %f2, %f2
; SPARC-NEXT:  .LBB0_8:
; SPARC-NEXT:    ld [%sp+100], %o1
; SPARC-NEXT:    mov 1, %o0
; SPARC-NEXT:    cmp %o1, 0
; SPARC-NEXT:    be .LBB0_10
; SPARC-NEXT:    mov %o0, %o1
; SPARC-NEXT:  ! %bb.9:
; SPARC-NEXT:    mov %g0, %o1
; SPARC-NEXT:  .LBB0_10:
; SPARC-NEXT:    cmp %o1, 0
; SPARC-NEXT:    bne .LBB0_12
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.11:
; SPARC-NEXT:    fmovs %f2, %f1
; SPARC-NEXT:  .LBB0_12:
; SPARC-NEXT:    ld [%sp+96], %o1
; SPARC-NEXT:    cmp %o1, 0
; SPARC-NEXT:    be .LBB0_14
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.13:
; SPARC-NEXT:    mov %g0, %o0
; SPARC-NEXT:  .LBB0_14:
; SPARC-NEXT:    cmp %o0, 0
; SPARC-NEXT:    bne .LBB0_16
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.15:
; SPARC-NEXT:    fmovs %f1, %f0
; SPARC-NEXT:  .LBB0_16:
; SPARC-NEXT:    sethi %hi(.LCPI0_0), %o0
; SPARC-NEXT:    ld [%o0+%lo(.LCPI0_0)], %f1
; SPARC-NEXT:    fcmps %f2, %f1
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbe .LBB0_18
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.17:
; SPARC-NEXT:    fmovs %f2, %f0
; SPARC-NEXT:  .LBB0_18:
; SPARC-NEXT:    retl
; SPARC-NEXT:    add %sp, 112, %sp
  %z = call float @llvm.maximumnum.f32(float %x, float %y)
  ret float %z
}

define float @maximumnum_float_nsz(float %x, float %y) {
;
; SPARC64-LABEL: maximumnum_float_nsz:
; SPARC64:         .cfi_startproc
; SPARC64-NEXT:  ! %bb.0:
; SPARC64-NEXT:    fmovs %f3, %f0
; SPARC64-NEXT:    fcmps %fcc0, %f1, %f1
; SPARC64-NEXT:    fmovsu %fcc0, %f3, %f1
; SPARC64-NEXT:    fcmps %fcc0, %f3, %f3
; SPARC64-NEXT:    fmovsu %fcc0, %f1, %f0
; SPARC64-NEXT:    fcmps %fcc0, %f1, %f0
; SPARC64-NEXT:    fmovsg %fcc0, %f1, %f0
; SPARC64-NEXT:    fadds %f0, %f0, %f1
; SPARC64-NEXT:    fcmps %fcc0, %f0, %f0
; SPARC64-NEXT:    retl
; SPARC64-NEXT:    fmovsu %fcc0, %f1, %f0
;
; SPARC-LABEL: maximumnum_float_nsz:
; SPARC:         .cfi_startproc
; SPARC-NEXT:  ! %bb.0:
; SPARC-NEXT:    add %sp, -104, %sp
; SPARC-NEXT:    .cfi_def_cfa_register %fp
; SPARC-NEXT:    .cfi_window_save
; SPARC-NEXT:    .cfi_register %o7, %i7
; SPARC-NEXT:    st %o0, [%sp+96]
; SPARC-NEXT:    st %o1, [%sp+100]
; SPARC-NEXT:    ld [%sp+96], %f2
; SPARC-NEXT:    ld [%sp+100], %f1
; SPARC-NEXT:    fcmps %f2, %f2
; SPARC-NEXT:    nop
; SPARC-NEXT:    fmovs %f1, %f0
; SPARC-NEXT:    fbu .LBB1_2
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.1:
; SPARC-NEXT:    fmovs %f2, %f0
; SPARC-NEXT:  .LBB1_2:
; SPARC-NEXT:    fcmps %f1, %f1
; SPARC-NEXT:    nop
; SPARC-NEXT:    fmovs %f0, %f2
; SPARC-NEXT:    fbo .LBB1_6
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.3:
; SPARC-NEXT:    fcmps %f0, %f2
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbule .LBB1_7
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB1_4:
; SPARC-NEXT:    fcmps %f0, %f0
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbu .LBB1_8
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB1_5:
; SPARC-NEXT:    retl
; SPARC-NEXT:    add %sp, 104, %sp
; SPARC-NEXT:  .LBB1_6:
; SPARC-NEXT:    fmovs %f1, %f2
; SPARC-NEXT:    fcmps %f0, %f2
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbg .LBB1_4
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB1_7:
; SPARC-NEXT:    fmovs %f2, %f0
; SPARC-NEXT:    fcmps %f0, %f0
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbo .LBB1_5
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB1_8:
; SPARC-NEXT:    fadds %f0, %f0, %f0
; SPARC-NEXT:    retl
; SPARC-NEXT:    add %sp, 104, %sp
  %z = call nsz float @llvm.maximumnum.f32(float %x, float %y)
  ret float %z
}

define float @maximumnum_float_nnan(float %x, float %y) {
;
; SPARC64-LABEL: maximumnum_float_nnan:
; SPARC64:         .cfi_startproc
; SPARC64-NEXT:  ! %bb.0:
; SPARC64-NEXT:    add %sp, -144, %sp
; SPARC64-NEXT:    .cfi_def_cfa_register %fp
; SPARC64-NEXT:    .cfi_window_save
; SPARC64-NEXT:    .cfi_register %o7, %i7
; SPARC64-NEXT:    st %f3, [%sp+2183]
; SPARC64-NEXT:    st %f1, [%sp+2187]
; SPARC64-NEXT:    ld [%sp+2187], %o0
; SPARC64-NEXT:    mov %g0, %o1
; SPARC64-NEXT:    mov %g0, %o2
; SPARC64-NEXT:    cmp %o0, 0
; SPARC64-NEXT:    ld [%sp+2183], %o0
; SPARC64-NEXT:    fcmps %fcc0, %f1, %f3
; SPARC64-NEXT:    fmovs %f3, %f0
; SPARC64-NEXT:    fmovsg %fcc0, %f1, %f0
; SPARC64-NEXT:    move %icc, 1, %o1
; SPARC64-NEXT:    cmp %o1, 0
; SPARC64-NEXT:    fmovs %f0, %f2
; SPARC64-NEXT:    fmovsne %icc, %f1, %f2
; SPARC64-NEXT:    cmp %o0, 0
; SPARC64-NEXT:    sethi %h44(.LCPI2_0), %o0
; SPARC64-NEXT:    add %o0, %m44(.LCPI2_0), %o0
; SPARC64-NEXT:    sllx %o0, 12, %o0
; SPARC64-NEXT:    ld [%o0+%l44(.LCPI2_0)], %f1
; SPARC64-NEXT:    move %icc, 1, %o2
; SPARC64-NEXT:    cmp %o2, 0
; SPARC64-NEXT:    fmovsne %icc, %f3, %f2
; SPARC64-NEXT:    fcmps %fcc0, %f0, %f1
; SPARC64-NEXT:    fmovse %fcc0, %f2, %f0
; SPARC64-NEXT:    retl
; SPARC64-NEXT:    add %sp, 144, %sp
;
; SPARC-LABEL: maximumnum_float_nnan:
; SPARC:         .cfi_startproc
; SPARC-NEXT:  ! %bb.0:
; SPARC-NEXT:    add %sp, -112, %sp
; SPARC-NEXT:    .cfi_def_cfa_register %fp
; SPARC-NEXT:    .cfi_window_save
; SPARC-NEXT:    .cfi_register %o7, %i7
; SPARC-NEXT:    st %o0, [%sp+104]
; SPARC-NEXT:    st %o1, [%sp+108]
; SPARC-NEXT:    ld [%sp+104], %f1
; SPARC-NEXT:    st %f1, [%sp+100]
; SPARC-NEXT:    ld [%sp+108], %f0
; SPARC-NEXT:    st %f0, [%sp+96]
; SPARC-NEXT:    ld [%sp+96], %o0
; SPARC-NEXT:    ld [%sp+100], %o2
; SPARC-NEXT:    mov 1, %o1
; SPARC-NEXT:    cmp %o0, 0
; SPARC-NEXT:    be .LBB2_2
; SPARC-NEXT:    mov %o1, %o0
; SPARC-NEXT:  ! %bb.1:
; SPARC-NEXT:    mov %g0, %o0
; SPARC-NEXT:  .LBB2_2:
; SPARC-NEXT:    cmp %o2, 0
; SPARC-NEXT:    be .LBB2_4
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.3:
; SPARC-NEXT:    mov %g0, %o1
; SPARC-NEXT:  .LBB2_4:
; SPARC-NEXT:    fcmps %f1, %f0
; SPARC-NEXT:    nop
; SPARC-NEXT:    fmovs %f1, %f2
; SPARC-NEXT:    fbule .LBB2_11
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.5:
; SPARC-NEXT:    cmp %o1, 0
; SPARC-NEXT:    be .LBB2_12
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB2_6:
; SPARC-NEXT:    cmp %o0, 0
; SPARC-NEXT:    bne .LBB2_8
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB2_7:
; SPARC-NEXT:    fmovs %f1, %f0
; SPARC-NEXT:  .LBB2_8:
; SPARC-NEXT:    sethi %hi(.LCPI2_0), %o0
; SPARC-NEXT:    ld [%o0+%lo(.LCPI2_0)], %f1
; SPARC-NEXT:    fcmps %f2, %f1
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbe .LBB2_10
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.9:
; SPARC-NEXT:    fmovs %f2, %f0
; SPARC-NEXT:  .LBB2_10:
; SPARC-NEXT:    retl
; SPARC-NEXT:    add %sp, 112, %sp
; SPARC-NEXT:  .LBB2_11:
; SPARC-NEXT:    fmovs %f0, %f2
; SPARC-NEXT:    cmp %o1, 0
; SPARC-NEXT:    bne .LBB2_6
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB2_12:
; SPARC-NEXT:    fmovs %f2, %f1
; SPARC-NEXT:    cmp %o0, 0
; SPARC-NEXT:    be .LBB2_7
; SPARC-NEXT:    nop
; SPARC-NEXT:    ba .LBB2_8
; SPARC-NEXT:    nop
  %z = call nnan float @llvm.maximumnum.f32(float %x, float %y)
  ret float %z
}


define double @maximumnum_double(double %x, double %y) {
;
; SPARC64-LABEL: maximumnum_double:
; SPARC64:         .cfi_startproc
; SPARC64-NEXT:  ! %bb.0:
; SPARC64-NEXT:    add %sp, -144, %sp
; SPARC64-NEXT:    .cfi_def_cfa_register %fp
; SPARC64-NEXT:    .cfi_window_save
; SPARC64-NEXT:    .cfi_register %o7, %i7
; SPARC64-NEXT:    mov %g0, %o0
; SPARC64-NEXT:    mov %g0, %o1
; SPARC64-NEXT:    fcmpd %fcc0, %f0, %f0
; SPARC64-NEXT:    fmovdu %fcc0, %f2, %f0
; SPARC64-NEXT:    fdtos %f0, %f4
; SPARC64-NEXT:    st %f4, [%sp+2187]
; SPARC64-NEXT:    fcmpd %fcc0, %f2, %f2
; SPARC64-NEXT:    fmovdu %fcc0, %f0, %f2
; SPARC64-NEXT:    fdtos %f2, %f4
; SPARC64-NEXT:    st %f4, [%sp+2183]
; SPARC64-NEXT:    fcmpd %fcc0, %f0, %f2
; SPARC64-NEXT:    fmovd %f2, %f4
; SPARC64-NEXT:    fmovdg %fcc0, %f0, %f4
; SPARC64-NEXT:    ld [%sp+2187], %o2
; SPARC64-NEXT:    faddd %f4, %f4, %f6
; SPARC64-NEXT:    fcmpd %fcc0, %f4, %f4
; SPARC64-NEXT:    fmovdu %fcc0, %f6, %f4
; SPARC64-NEXT:    cmp %o2, 0
; SPARC64-NEXT:    ld [%sp+2183], %o2
; SPARC64-NEXT:    move %icc, 1, %o0
; SPARC64-NEXT:    cmp %o0, 0
; SPARC64-NEXT:    fmovd %f4, %f6
; SPARC64-NEXT:    fmovdne %icc, %f0, %f6
; SPARC64-NEXT:    cmp %o2, 0
; SPARC64-NEXT:    sethi %h44(.LCPI3_0), %o0
; SPARC64-NEXT:    add %o0, %m44(.LCPI3_0), %o0
; SPARC64-NEXT:    sllx %o0, 12, %o0
; SPARC64-NEXT:    ldd [%o0+%l44(.LCPI3_0)], %f0
; SPARC64-NEXT:    move %icc, 1, %o1
; SPARC64-NEXT:    cmp %o1, 0
; SPARC64-NEXT:    fmovdne %icc, %f2, %f6
; SPARC64-NEXT:    fcmpd %fcc0, %f4, %f0
; SPARC64-NEXT:    fmovde %fcc0, %f6, %f4
; SPARC64-NEXT:    fmovd %f4, %f0
; SPARC64-NEXT:    retl
; SPARC64-NEXT:    add %sp, 144, %sp
;
; SPARC-LABEL: maximumnum_double:
; SPARC:         .cfi_startproc
; SPARC-NEXT:  ! %bb.0:
; SPARC-NEXT:    add %sp, -120, %sp
; SPARC-NEXT:    .cfi_def_cfa_register %fp
; SPARC-NEXT:    .cfi_window_save
; SPARC-NEXT:    .cfi_register %o7, %i7
; SPARC-NEXT:    ! kill: def $o1 killed $o1 killed $o0_o1 def $o0_o1
; SPARC-NEXT:    ! kill: def $o3 killed $o3 killed $o2_o3 def $o2_o3
; SPARC-NEXT:    ! kill: def $o0 killed $o0 killed $o0_o1 def $o0_o1
; SPARC-NEXT:    std %o0, [%sp+112]
; SPARC-NEXT:    ! kill: def $o2 killed $o2 killed $o2_o3 def $o2_o3
; SPARC-NEXT:    std %o2, [%sp+104]
; SPARC-NEXT:    ldd [%sp+112], %f0
; SPARC-NEXT:    ldd [%sp+104], %f4
; SPARC-NEXT:    fcmpd %f0, %f0
; SPARC-NEXT:    nop
; SPARC-NEXT:    fmovs %f4, %f2
; SPARC-NEXT:    fmovs %f5, %f3
; SPARC-NEXT:    fbu .LBB3_2
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.1:
; SPARC-NEXT:    fmovs %f0, %f2
; SPARC-NEXT:    fmovs %f1, %f3
; SPARC-NEXT:  .LBB3_2:
; SPARC-NEXT:    fdtos %f2, %f0
; SPARC-NEXT:    fcmpd %f4, %f4
; SPARC-NEXT:    nop
; SPARC-NEXT:    st %f0, [%sp+100]
; SPARC-NEXT:    fmovs %f2, %f0
; SPARC-NEXT:    fmovs %f3, %f1
; SPARC-NEXT:    fbu .LBB3_4
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.3:
; SPARC-NEXT:    fmovs %f4, %f0
; SPARC-NEXT:    fmovs %f5, %f1
; SPARC-NEXT:  .LBB3_4:
; SPARC-NEXT:    fdtos %f0, %f4
; SPARC-NEXT:    fcmpd %f2, %f0
; SPARC-NEXT:    nop
; SPARC-NEXT:    st %f4, [%sp+96]
; SPARC-NEXT:    fmovs %f2, %f4
; SPARC-NEXT:    fmovs %f3, %f5
; SPARC-NEXT:    fbg .LBB3_6
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.5:
; SPARC-NEXT:    fmovs %f0, %f4
; SPARC-NEXT:    fmovs %f1, %f5
; SPARC-NEXT:  .LBB3_6:
; SPARC-NEXT:    fcmpd %f4, %f4
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbo .LBB3_8
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.7:
; SPARC-NEXT:    faddd %f4, %f4, %f4
; SPARC-NEXT:  .LBB3_8:
; SPARC-NEXT:    ld [%sp+100], %o1
; SPARC-NEXT:    mov 1, %o0
; SPARC-NEXT:    cmp %o1, 0
; SPARC-NEXT:    be .LBB3_10
; SPARC-NEXT:    mov %o0, %o1
; SPARC-NEXT:  ! %bb.9:
; SPARC-NEXT:    mov %g0, %o1
; SPARC-NEXT:  .LBB3_10:
; SPARC-NEXT:    cmp %o1, 0
; SPARC-NEXT:    bne .LBB3_12
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.11:
; SPARC-NEXT:    fmovs %f4, %f2
; SPARC-NEXT:    fmovs %f5, %f3
; SPARC-NEXT:  .LBB3_12:
; SPARC-NEXT:    ld [%sp+96], %o1
; SPARC-NEXT:    cmp %o1, 0
; SPARC-NEXT:    be .LBB3_14
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.13:
; SPARC-NEXT:    mov %g0, %o0
; SPARC-NEXT:  .LBB3_14:
; SPARC-NEXT:    cmp %o0, 0
; SPARC-NEXT:    bne .LBB3_16
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.15:
; SPARC-NEXT:    fmovs %f2, %f0
; SPARC-NEXT:    fmovs %f3, %f1
; SPARC-NEXT:  .LBB3_16:
; SPARC-NEXT:    sethi %hi(.LCPI3_0), %o0
; SPARC-NEXT:    ldd [%o0+%lo(.LCPI3_0)], %f2
; SPARC-NEXT:    fcmpd %f4, %f2
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbe .LBB3_18
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.17:
; SPARC-NEXT:    fmovs %f4, %f0
; SPARC-NEXT:    fmovs %f5, %f1
; SPARC-NEXT:  .LBB3_18:
; SPARC-NEXT:    retl
; SPARC-NEXT:    add %sp, 120, %sp
  %z = call double @llvm.maximumnum.f64(double %x, double %y)
  ret double %z
}

define double @maximumnum_double_nsz(double %x, double %y) {
;
; SPARC64-LABEL: maximumnum_double_nsz:
; SPARC64:         .cfi_startproc
; SPARC64-NEXT:  ! %bb.0:
; SPARC64-NEXT:    fcmpd %fcc0, %f0, %f0
; SPARC64-NEXT:    fmovdu %fcc0, %f2, %f0
; SPARC64-NEXT:    fcmpd %fcc0, %f2, %f2
; SPARC64-NEXT:    fmovdu %fcc0, %f0, %f2
; SPARC64-NEXT:    fcmpd %fcc0, %f0, %f2
; SPARC64-NEXT:    fmovdg %fcc0, %f0, %f2
; SPARC64-NEXT:    faddd %f2, %f2, %f0
; SPARC64-NEXT:    fcmpd %fcc0, %f2, %f2
; SPARC64-NEXT:    fmovdu %fcc0, %f0, %f2
; SPARC64-NEXT:    fmovd %f2, %f0
; SPARC64-NEXT:    retl
; SPARC64-NEXT:    nop
;
; SPARC-LABEL: maximumnum_double_nsz:
; SPARC:         .cfi_startproc
; SPARC-NEXT:  ! %bb.0:
; SPARC-NEXT:    add %sp, -112, %sp
; SPARC-NEXT:    .cfi_def_cfa_register %fp
; SPARC-NEXT:    .cfi_window_save
; SPARC-NEXT:    .cfi_register %o7, %i7
; SPARC-NEXT:    ! kill: def $o1 killed $o1 killed $o0_o1 def $o0_o1
; SPARC-NEXT:    ! kill: def $o3 killed $o3 killed $o2_o3 def $o2_o3
; SPARC-NEXT:    ! kill: def $o0 killed $o0 killed $o0_o1 def $o0_o1
; SPARC-NEXT:    std %o0, [%sp+104]
; SPARC-NEXT:    ! kill: def $o2 killed $o2 killed $o2_o3 def $o2_o3
; SPARC-NEXT:    std %o2, [%sp+96]
; SPARC-NEXT:    ldd [%sp+104], %f4
; SPARC-NEXT:    ldd [%sp+96], %f2
; SPARC-NEXT:    fcmpd %f4, %f4
; SPARC-NEXT:    nop
; SPARC-NEXT:    fmovs %f2, %f0
; SPARC-NEXT:    fmovs %f3, %f1
; SPARC-NEXT:    fbu .LBB4_2
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.1:
; SPARC-NEXT:    fmovs %f4, %f0
; SPARC-NEXT:    fmovs %f5, %f1
; SPARC-NEXT:  .LBB4_2:
; SPARC-NEXT:    fcmpd %f2, %f2
; SPARC-NEXT:    nop
; SPARC-NEXT:    fmovs %f0, %f4
; SPARC-NEXT:    fmovs %f1, %f5
; SPARC-NEXT:    fbo .LBB4_6
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.3:
; SPARC-NEXT:    fcmpd %f0, %f4
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbule .LBB4_7
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB4_4:
; SPARC-NEXT:    fcmpd %f0, %f0
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbu .LBB4_8
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB4_5:
; SPARC-NEXT:    retl
; SPARC-NEXT:    add %sp, 112, %sp
; SPARC-NEXT:  .LBB4_6:
; SPARC-NEXT:    fmovs %f2, %f4
; SPARC-NEXT:    fmovs %f3, %f5
; SPARC-NEXT:    fcmpd %f0, %f4
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbg .LBB4_4
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB4_7:
; SPARC-NEXT:    fmovs %f4, %f0
; SPARC-NEXT:    fmovs %f5, %f1
; SPARC-NEXT:    fcmpd %f0, %f0
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbo .LBB4_5
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB4_8:
; SPARC-NEXT:    faddd %f0, %f0, %f0
; SPARC-NEXT:    retl
; SPARC-NEXT:    add %sp, 112, %sp
  %z = call nsz double @llvm.maximumnum.f64(double %x, double %y)
  ret double %z
}

define double @maximumnum_double_nnan(double %x, double %y) {
;
; SPARC64-LABEL: maximumnum_double_nnan:
; SPARC64:         .cfi_startproc
; SPARC64-NEXT:  ! %bb.0:
; SPARC64-NEXT:    add %sp, -144, %sp
; SPARC64-NEXT:    .cfi_def_cfa_register %fp
; SPARC64-NEXT:    .cfi_window_save
; SPARC64-NEXT:    .cfi_register %o7, %i7
; SPARC64-NEXT:    fdtos %f0, %f4
; SPARC64-NEXT:    st %f4, [%sp+2187]
; SPARC64-NEXT:    fdtos %f2, %f4
; SPARC64-NEXT:    st %f4, [%sp+2183]
; SPARC64-NEXT:    ld [%sp+2187], %o0
; SPARC64-NEXT:    mov %g0, %o1
; SPARC64-NEXT:    mov %g0, %o2
; SPARC64-NEXT:    fcmpd %fcc0, %f0, %f2
; SPARC64-NEXT:    fmovd %f2, %f4
; SPARC64-NEXT:    fmovdg %fcc0, %f0, %f4
; SPARC64-NEXT:    cmp %o0, 0
; SPARC64-NEXT:    ld [%sp+2183], %o0
; SPARC64-NEXT:    move %icc, 1, %o1
; SPARC64-NEXT:    cmp %o1, 0
; SPARC64-NEXT:    fmovd %f4, %f6
; SPARC64-NEXT:    fmovdne %icc, %f0, %f6
; SPARC64-NEXT:    cmp %o0, 0
; SPARC64-NEXT:    sethi %h44(.LCPI5_0), %o0
; SPARC64-NEXT:    add %o0, %m44(.LCPI5_0), %o0
; SPARC64-NEXT:    sllx %o0, 12, %o0
; SPARC64-NEXT:    ldd [%o0+%l44(.LCPI5_0)], %f0
; SPARC64-NEXT:    move %icc, 1, %o2
; SPARC64-NEXT:    cmp %o2, 0
; SPARC64-NEXT:    fmovdne %icc, %f2, %f6
; SPARC64-NEXT:    fcmpd %fcc0, %f4, %f0
; SPARC64-NEXT:    fmovde %fcc0, %f6, %f4
; SPARC64-NEXT:    fmovd %f4, %f0
; SPARC64-NEXT:    retl
; SPARC64-NEXT:    add %sp, 144, %sp
;
; SPARC-LABEL: maximumnum_double_nnan:
; SPARC:         .cfi_startproc
; SPARC-NEXT:  ! %bb.0:
; SPARC-NEXT:    add %sp, -120, %sp
; SPARC-NEXT:    .cfi_def_cfa_register %fp
; SPARC-NEXT:    .cfi_window_save
; SPARC-NEXT:    .cfi_register %o7, %i7
; SPARC-NEXT:    ! kill: def $o1 killed $o1 killed $o0_o1 def $o0_o1
; SPARC-NEXT:    ! kill: def $o3 killed $o3 killed $o2_o3 def $o2_o3
; SPARC-NEXT:    ! kill: def $o0 killed $o0 killed $o0_o1 def $o0_o1
; SPARC-NEXT:    std %o0, [%sp+112]
; SPARC-NEXT:    ! kill: def $o2 killed $o2 killed $o2_o3 def $o2_o3
; SPARC-NEXT:    std %o2, [%sp+104]
; SPARC-NEXT:    ldd [%sp+104], %f0
; SPARC-NEXT:    ldd [%sp+112], %f2
; SPARC-NEXT:    fdtos %f0, %f4
; SPARC-NEXT:    st %f4, [%sp+96]
; SPARC-NEXT:    fdtos %f2, %f4
; SPARC-NEXT:    st %f4, [%sp+100]
; SPARC-NEXT:    ld [%sp+96], %o0
; SPARC-NEXT:    mov 1, %o1
; SPARC-NEXT:    cmp %o0, 0
; SPARC-NEXT:    be .LBB5_2
; SPARC-NEXT:    mov %o1, %o0
; SPARC-NEXT:  ! %bb.1:
; SPARC-NEXT:    mov %g0, %o0
; SPARC-NEXT:  .LBB5_2:
; SPARC-NEXT:    ld [%sp+100], %o2
; SPARC-NEXT:    cmp %o2, 0
; SPARC-NEXT:    be .LBB5_4
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.3:
; SPARC-NEXT:    mov %g0, %o1
; SPARC-NEXT:  .LBB5_4:
; SPARC-NEXT:    fcmpd %f2, %f0
; SPARC-NEXT:    nop
; SPARC-NEXT:    fmovs %f2, %f4
; SPARC-NEXT:    fmovs %f3, %f5
; SPARC-NEXT:    fbule .LBB5_11
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.5:
; SPARC-NEXT:    cmp %o1, 0
; SPARC-NEXT:    be .LBB5_12
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB5_6:
; SPARC-NEXT:    cmp %o0, 0
; SPARC-NEXT:    bne .LBB5_8
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB5_7:
; SPARC-NEXT:    fmovs %f2, %f0
; SPARC-NEXT:    fmovs %f3, %f1
; SPARC-NEXT:  .LBB5_8:
; SPARC-NEXT:    sethi %hi(.LCPI5_0), %o0
; SPARC-NEXT:    ldd [%o0+%lo(.LCPI5_0)], %f2
; SPARC-NEXT:    fcmpd %f4, %f2
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbe .LBB5_10
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.9:
; SPARC-NEXT:    fmovs %f4, %f0
; SPARC-NEXT:    fmovs %f5, %f1
; SPARC-NEXT:  .LBB5_10:
; SPARC-NEXT:    retl
; SPARC-NEXT:    add %sp, 120, %sp
; SPARC-NEXT:  .LBB5_11:
; SPARC-NEXT:    fmovs %f0, %f4
; SPARC-NEXT:    fmovs %f1, %f5
; SPARC-NEXT:    cmp %o1, 0
; SPARC-NEXT:    bne .LBB5_6
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB5_12:
; SPARC-NEXT:    fmovs %f4, %f2
; SPARC-NEXT:    fmovs %f5, %f3
; SPARC-NEXT:    cmp %o0, 0
; SPARC-NEXT:    be .LBB5_7
; SPARC-NEXT:    nop
; SPARC-NEXT:    ba .LBB5_8
; SPARC-NEXT:    nop
  %z = call nnan double @llvm.maximumnum.f64(double %x, double %y)
  ret double %z
}

define float @minimumnum_float(float %x, float %y) {
;
; SPARC64-LABEL: minimumnum_float:
; SPARC64:         .cfi_startproc
; SPARC64-NEXT:  ! %bb.0:
; SPARC64-NEXT:    add %sp, -144, %sp
; SPARC64-NEXT:    .cfi_def_cfa_register %fp
; SPARC64-NEXT:    .cfi_window_save
; SPARC64-NEXT:    .cfi_register %o7, %i7
; SPARC64-NEXT:    mov %g0, %o0
; SPARC64-NEXT:    mov %g0, %o1
; SPARC64-NEXT:    fcmps %fcc0, %f1, %f1
; SPARC64-NEXT:    fmovsu %fcc0, %f3, %f1
; SPARC64-NEXT:    st %f1, [%sp+2187]
; SPARC64-NEXT:    fcmps %fcc0, %f3, %f3
; SPARC64-NEXT:    fmovsu %fcc0, %f1, %f3
; SPARC64-NEXT:    st %f3, [%sp+2183]
; SPARC64-NEXT:    fcmps %fcc0, %f1, %f3
; SPARC64-NEXT:    fmovs %f3, %f0
; SPARC64-NEXT:    fmovsl %fcc0, %f1, %f0
; SPARC64-NEXT:    fadds %f0, %f0, %f2
; SPARC64-NEXT:    ld [%sp+2187], %o2
; SPARC64-NEXT:    fcmps %fcc0, %f0, %f0
; SPARC64-NEXT:    fmovsu %fcc0, %f2, %f0
; SPARC64-NEXT:    sethi 2097152, %o3
; SPARC64-NEXT:    cmp %o2, %o3
; SPARC64-NEXT:    ld [%sp+2183], %o2
; SPARC64-NEXT:    move %icc, 1, %o0
; SPARC64-NEXT:    cmp %o0, 0
; SPARC64-NEXT:    fmovs %f0, %f2
; SPARC64-NEXT:    fmovsne %icc, %f1, %f2
; SPARC64-NEXT:    cmp %o2, %o3
; SPARC64-NEXT:    sethi %h44(.LCPI6_0), %o0
; SPARC64-NEXT:    add %o0, %m44(.LCPI6_0), %o0
; SPARC64-NEXT:    sllx %o0, 12, %o0
; SPARC64-NEXT:    ld [%o0+%l44(.LCPI6_0)], %f1
; SPARC64-NEXT:    move %icc, 1, %o1
; SPARC64-NEXT:    cmp %o1, 0
; SPARC64-NEXT:    fmovsne %icc, %f3, %f2
; SPARC64-NEXT:    fcmps %fcc0, %f0, %f1
; SPARC64-NEXT:    fmovse %fcc0, %f2, %f0
; SPARC64-NEXT:    retl
; SPARC64-NEXT:    add %sp, 144, %sp
;
; SPARC-LABEL: minimumnum_float:
; SPARC:         .cfi_startproc
; SPARC-NEXT:  ! %bb.0:
; SPARC-NEXT:    add %sp, -112, %sp
; SPARC-NEXT:    .cfi_def_cfa_register %fp
; SPARC-NEXT:    .cfi_window_save
; SPARC-NEXT:    .cfi_register %o7, %i7
; SPARC-NEXT:    st %o0, [%sp+104]
; SPARC-NEXT:    st %o1, [%sp+108]
; SPARC-NEXT:    ld [%sp+104], %f0
; SPARC-NEXT:    ld [%sp+108], %f2
; SPARC-NEXT:    fcmps %f0, %f0
; SPARC-NEXT:    nop
; SPARC-NEXT:    fmovs %f2, %f1
; SPARC-NEXT:    fbu .LBB6_2
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.1:
; SPARC-NEXT:    fmovs %f0, %f1
; SPARC-NEXT:  .LBB6_2:
; SPARC-NEXT:    fcmps %f2, %f2
; SPARC-NEXT:    nop
; SPARC-NEXT:    st %f1, [%sp+100]
; SPARC-NEXT:    fmovs %f1, %f0
; SPARC-NEXT:    fbu .LBB6_4
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.3:
; SPARC-NEXT:    fmovs %f2, %f0
; SPARC-NEXT:  .LBB6_4:
; SPARC-NEXT:    st %f0, [%sp+96]
; SPARC-NEXT:    ld [%sp+100], %o2
; SPARC-NEXT:    sethi 2097152, %o1
; SPARC-NEXT:    mov 1, %o0
; SPARC-NEXT:    cmp %o2, %o1
; SPARC-NEXT:    be .LBB6_6
; SPARC-NEXT:    mov %o0, %o2
; SPARC-NEXT:  ! %bb.5:
; SPARC-NEXT:    mov %g0, %o2
; SPARC-NEXT:  .LBB6_6:
; SPARC-NEXT:    fcmps %f1, %f0
; SPARC-NEXT:    nop
; SPARC-NEXT:    fmovs %f1, %f2
; SPARC-NEXT:    fbuge .LBB6_17
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.7:
; SPARC-NEXT:    fcmps %f2, %f2
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbu .LBB6_18
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB6_8:
; SPARC-NEXT:    cmp %o2, 0
; SPARC-NEXT:    bne .LBB6_10
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB6_9:
; SPARC-NEXT:    fmovs %f2, %f1
; SPARC-NEXT:  .LBB6_10:
; SPARC-NEXT:    ld [%sp+96], %o2
; SPARC-NEXT:    cmp %o2, %o1
; SPARC-NEXT:    be .LBB6_12
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.11:
; SPARC-NEXT:    mov %g0, %o0
; SPARC-NEXT:  .LBB6_12:
; SPARC-NEXT:    cmp %o0, 0
; SPARC-NEXT:    bne .LBB6_14
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.13:
; SPARC-NEXT:    fmovs %f1, %f0
; SPARC-NEXT:  .LBB6_14:
; SPARC-NEXT:    sethi %hi(.LCPI6_0), %o0
; SPARC-NEXT:    ld [%o0+%lo(.LCPI6_0)], %f1
; SPARC-NEXT:    fcmps %f2, %f1
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbe .LBB6_16
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.15:
; SPARC-NEXT:    fmovs %f2, %f0
; SPARC-NEXT:  .LBB6_16:
; SPARC-NEXT:    retl
; SPARC-NEXT:    add %sp, 112, %sp
; SPARC-NEXT:  .LBB6_17:
; SPARC-NEXT:    fmovs %f0, %f2
; SPARC-NEXT:    fcmps %f2, %f2
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbo .LBB6_8
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB6_18:
; SPARC-NEXT:    cmp %o2, 0
; SPARC-NEXT:    be .LBB6_9
; SPARC-NEXT:    fadds %f2, %f2, %f2
; SPARC-NEXT:    ba .LBB6_10
; SPARC-NEXT:    nop
  %z = call float @llvm.minimumnum.f32(float %x, float %y)
  ret float %z
}

define float @minimumnum_float_nsz(float %x, float %y) {
;
; SPARC64-LABEL: minimumnum_float_nsz:
; SPARC64:         .cfi_startproc
; SPARC64-NEXT:  ! %bb.0:
; SPARC64-NEXT:    fmovs %f3, %f0
; SPARC64-NEXT:    fcmps %fcc0, %f1, %f1
; SPARC64-NEXT:    fmovsu %fcc0, %f3, %f1
; SPARC64-NEXT:    fcmps %fcc0, %f3, %f3
; SPARC64-NEXT:    fmovsu %fcc0, %f1, %f0
; SPARC64-NEXT:    fcmps %fcc0, %f1, %f0
; SPARC64-NEXT:    fmovsl %fcc0, %f1, %f0
; SPARC64-NEXT:    fadds %f0, %f0, %f1
; SPARC64-NEXT:    fcmps %fcc0, %f0, %f0
; SPARC64-NEXT:    retl
; SPARC64-NEXT:    fmovsu %fcc0, %f1, %f0
;
; SPARC-LABEL: minimumnum_float_nsz:
; SPARC:         .cfi_startproc
; SPARC-NEXT:  ! %bb.0:
; SPARC-NEXT:    add %sp, -104, %sp
; SPARC-NEXT:    .cfi_def_cfa_register %fp
; SPARC-NEXT:    .cfi_window_save
; SPARC-NEXT:    .cfi_register %o7, %i7
; SPARC-NEXT:    st %o0, [%sp+96]
; SPARC-NEXT:    st %o1, [%sp+100]
; SPARC-NEXT:    ld [%sp+96], %f2
; SPARC-NEXT:    ld [%sp+100], %f1
; SPARC-NEXT:    fcmps %f2, %f2
; SPARC-NEXT:    nop
; SPARC-NEXT:    fmovs %f1, %f0
; SPARC-NEXT:    fbu .LBB7_2
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.1:
; SPARC-NEXT:    fmovs %f2, %f0
; SPARC-NEXT:  .LBB7_2:
; SPARC-NEXT:    fcmps %f1, %f1
; SPARC-NEXT:    nop
; SPARC-NEXT:    fmovs %f0, %f2
; SPARC-NEXT:    fbo .LBB7_6
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.3:
; SPARC-NEXT:    fcmps %f0, %f2
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbuge .LBB7_7
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB7_4:
; SPARC-NEXT:    fcmps %f0, %f0
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbu .LBB7_8
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB7_5:
; SPARC-NEXT:    retl
; SPARC-NEXT:    add %sp, 104, %sp
; SPARC-NEXT:  .LBB7_6:
; SPARC-NEXT:    fmovs %f1, %f2
; SPARC-NEXT:    fcmps %f0, %f2
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbl .LBB7_4
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB7_7:
; SPARC-NEXT:    fmovs %f2, %f0
; SPARC-NEXT:    fcmps %f0, %f0
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbo .LBB7_5
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB7_8:
; SPARC-NEXT:    fadds %f0, %f0, %f0
; SPARC-NEXT:    retl
; SPARC-NEXT:    add %sp, 104, %sp
  %z = call nsz float @llvm.minimumnum.f32(float %x, float %y)
  ret float %z
}

define float @minimumnum_float_nnan(float %x, float %y) {
;
; SPARC64-LABEL: minimumnum_float_nnan:
; SPARC64:         .cfi_startproc
; SPARC64-NEXT:  ! %bb.0:
; SPARC64-NEXT:    add %sp, -144, %sp
; SPARC64-NEXT:    .cfi_def_cfa_register %fp
; SPARC64-NEXT:    .cfi_window_save
; SPARC64-NEXT:    .cfi_register %o7, %i7
; SPARC64-NEXT:    st %f1, [%sp+2187]
; SPARC64-NEXT:    st %f3, [%sp+2183]
; SPARC64-NEXT:    ld [%sp+2183], %o0
; SPARC64-NEXT:    mov %g0, %o1
; SPARC64-NEXT:    mov %g0, %o2
; SPARC64-NEXT:    ld [%sp+2187], %o3
; SPARC64-NEXT:    sethi 2097152, %o4
; SPARC64-NEXT:    cmp %o0, %o4
; SPARC64-NEXT:    move %icc, 1, %o1
; SPARC64-NEXT:    cmp %o3, %o4
; SPARC64-NEXT:    move %icc, 1, %o2
; SPARC64-NEXT:    fcmps %fcc0, %f1, %f3
; SPARC64-NEXT:    fmovs %f3, %f0
; SPARC64-NEXT:    fmovsl %fcc0, %f1, %f0
; SPARC64-NEXT:    cmp %o2, 0
; SPARC64-NEXT:    fmovs %f0, %f2
; SPARC64-NEXT:    sethi %h44(.LCPI8_0), %o0
; SPARC64-NEXT:    add %o0, %m44(.LCPI8_0), %o0
; SPARC64-NEXT:    sllx %o0, 12, %o0
; SPARC64-NEXT:    ld [%o0+%l44(.LCPI8_0)], %f4
; SPARC64-NEXT:    fmovsne %icc, %f1, %f2
; SPARC64-NEXT:    cmp %o1, 0
; SPARC64-NEXT:    fmovsne %icc, %f3, %f2
; SPARC64-NEXT:    fcmps %fcc0, %f0, %f4
; SPARC64-NEXT:    fmovse %fcc0, %f2, %f0
; SPARC64-NEXT:    retl
; SPARC64-NEXT:    add %sp, 144, %sp
;
; SPARC-LABEL: minimumnum_float_nnan:
; SPARC:         .cfi_startproc
; SPARC-NEXT:  ! %bb.0:
; SPARC-NEXT:    add %sp, -112, %sp
; SPARC-NEXT:    .cfi_def_cfa_register %fp
; SPARC-NEXT:    .cfi_window_save
; SPARC-NEXT:    .cfi_register %o7, %i7
; SPARC-NEXT:    st %o0, [%sp+104]
; SPARC-NEXT:    st %o1, [%sp+108]
; SPARC-NEXT:    ld [%sp+104], %f1
; SPARC-NEXT:    st %f1, [%sp+100]
; SPARC-NEXT:    ld [%sp+108], %f0
; SPARC-NEXT:    st %f0, [%sp+96]
; SPARC-NEXT:    ld [%sp+96], %o0
; SPARC-NEXT:    ld [%sp+100], %o2
; SPARC-NEXT:    sethi 2097152, %o3
; SPARC-NEXT:    mov 1, %o1
; SPARC-NEXT:    cmp %o0, %o3
; SPARC-NEXT:    be .LBB8_2
; SPARC-NEXT:    mov %o1, %o0
; SPARC-NEXT:  ! %bb.1:
; SPARC-NEXT:    mov %g0, %o0
; SPARC-NEXT:  .LBB8_2:
; SPARC-NEXT:    cmp %o2, %o3
; SPARC-NEXT:    be .LBB8_4
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.3:
; SPARC-NEXT:    mov %g0, %o1
; SPARC-NEXT:  .LBB8_4:
; SPARC-NEXT:    fcmps %f1, %f0
; SPARC-NEXT:    nop
; SPARC-NEXT:    fmovs %f1, %f2
; SPARC-NEXT:    fbuge .LBB8_11
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.5:
; SPARC-NEXT:    cmp %o1, 0
; SPARC-NEXT:    be .LBB8_12
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB8_6:
; SPARC-NEXT:    cmp %o0, 0
; SPARC-NEXT:    bne .LBB8_8
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB8_7:
; SPARC-NEXT:    fmovs %f1, %f0
; SPARC-NEXT:  .LBB8_8:
; SPARC-NEXT:    sethi %hi(.LCPI8_0), %o0
; SPARC-NEXT:    ld [%o0+%lo(.LCPI8_0)], %f1
; SPARC-NEXT:    fcmps %f2, %f1
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbe .LBB8_10
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.9:
; SPARC-NEXT:    fmovs %f2, %f0
; SPARC-NEXT:  .LBB8_10:
; SPARC-NEXT:    retl
; SPARC-NEXT:    add %sp, 112, %sp
; SPARC-NEXT:  .LBB8_11:
; SPARC-NEXT:    fmovs %f0, %f2
; SPARC-NEXT:    cmp %o1, 0
; SPARC-NEXT:    bne .LBB8_6
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB8_12:
; SPARC-NEXT:    fmovs %f2, %f1
; SPARC-NEXT:    cmp %o0, 0
; SPARC-NEXT:    be .LBB8_7
; SPARC-NEXT:    nop
; SPARC-NEXT:    ba .LBB8_8
; SPARC-NEXT:    nop
  %z = call nnan float @llvm.minimumnum.f32(float %x, float %y)
  ret float %z
}

define double @minimumnum_double(double %x, double %y) {
;
; SPARC64-LABEL: minimumnum_double:
; SPARC64:         .cfi_startproc
; SPARC64-NEXT:  ! %bb.0:
; SPARC64-NEXT:    add %sp, -144, %sp
; SPARC64-NEXT:    .cfi_def_cfa_register %fp
; SPARC64-NEXT:    .cfi_window_save
; SPARC64-NEXT:    .cfi_register %o7, %i7
; SPARC64-NEXT:    mov %g0, %o0
; SPARC64-NEXT:    mov %g0, %o1
; SPARC64-NEXT:    fcmpd %fcc0, %f0, %f0
; SPARC64-NEXT:    fmovdu %fcc0, %f2, %f0
; SPARC64-NEXT:    fdtos %f0, %f4
; SPARC64-NEXT:    st %f4, [%sp+2187]
; SPARC64-NEXT:    fcmpd %fcc0, %f2, %f2
; SPARC64-NEXT:    fmovdu %fcc0, %f0, %f2
; SPARC64-NEXT:    fdtos %f2, %f4
; SPARC64-NEXT:    st %f4, [%sp+2183]
; SPARC64-NEXT:    fcmpd %fcc0, %f0, %f2
; SPARC64-NEXT:    fmovd %f2, %f4
; SPARC64-NEXT:    fmovdl %fcc0, %f0, %f4
; SPARC64-NEXT:    faddd %f4, %f4, %f6
; SPARC64-NEXT:    ld [%sp+2187], %o2
; SPARC64-NEXT:    fcmpd %fcc0, %f4, %f4
; SPARC64-NEXT:    fmovdu %fcc0, %f6, %f4
; SPARC64-NEXT:    sethi 2097152, %o3
; SPARC64-NEXT:    cmp %o2, %o3
; SPARC64-NEXT:    ld [%sp+2183], %o2
; SPARC64-NEXT:    move %icc, 1, %o0
; SPARC64-NEXT:    cmp %o0, 0
; SPARC64-NEXT:    fmovd %f4, %f6
; SPARC64-NEXT:    fmovdne %icc, %f0, %f6
; SPARC64-NEXT:    cmp %o2, %o3
; SPARC64-NEXT:    sethi %h44(.LCPI9_0), %o0
; SPARC64-NEXT:    add %o0, %m44(.LCPI9_0), %o0
; SPARC64-NEXT:    sllx %o0, 12, %o0
; SPARC64-NEXT:    ldd [%o0+%l44(.LCPI9_0)], %f0
; SPARC64-NEXT:    move %icc, 1, %o1
; SPARC64-NEXT:    cmp %o1, 0
; SPARC64-NEXT:    fmovdne %icc, %f2, %f6
; SPARC64-NEXT:    fcmpd %fcc0, %f4, %f0
; SPARC64-NEXT:    fmovde %fcc0, %f6, %f4
; SPARC64-NEXT:    fmovd %f4, %f0
; SPARC64-NEXT:    retl
; SPARC64-NEXT:    add %sp, 144, %sp
;
; SPARC-LABEL: minimumnum_double:
; SPARC:         .cfi_startproc
; SPARC-NEXT:  ! %bb.0:
; SPARC-NEXT:    add %sp, -120, %sp
; SPARC-NEXT:    .cfi_def_cfa_register %fp
; SPARC-NEXT:    .cfi_window_save
; SPARC-NEXT:    .cfi_register %o7, %i7
; SPARC-NEXT:    ! kill: def $o1 killed $o1 killed $o0_o1 def $o0_o1
; SPARC-NEXT:    ! kill: def $o3 killed $o3 killed $o2_o3 def $o2_o3
; SPARC-NEXT:    ! kill: def $o0 killed $o0 killed $o0_o1 def $o0_o1
; SPARC-NEXT:    std %o0, [%sp+112]
; SPARC-NEXT:    ! kill: def $o2 killed $o2 killed $o2_o3 def $o2_o3
; SPARC-NEXT:    std %o2, [%sp+104]
; SPARC-NEXT:    ldd [%sp+112], %f0
; SPARC-NEXT:    ldd [%sp+104], %f4
; SPARC-NEXT:    fcmpd %f0, %f0
; SPARC-NEXT:    nop
; SPARC-NEXT:    fmovs %f4, %f2
; SPARC-NEXT:    fmovs %f5, %f3
; SPARC-NEXT:    fbu .LBB9_2
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.1:
; SPARC-NEXT:    fmovs %f0, %f2
; SPARC-NEXT:    fmovs %f1, %f3
; SPARC-NEXT:  .LBB9_2:
; SPARC-NEXT:    fdtos %f2, %f0
; SPARC-NEXT:    fcmpd %f4, %f4
; SPARC-NEXT:    nop
; SPARC-NEXT:    st %f0, [%sp+100]
; SPARC-NEXT:    fmovs %f2, %f0
; SPARC-NEXT:    fmovs %f3, %f1
; SPARC-NEXT:    fbu .LBB9_4
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.3:
; SPARC-NEXT:    fmovs %f4, %f0
; SPARC-NEXT:    fmovs %f5, %f1
; SPARC-NEXT:  .LBB9_4:
; SPARC-NEXT:    fdtos %f0, %f4
; SPARC-NEXT:    st %f4, [%sp+96]
; SPARC-NEXT:    ld [%sp+100], %o2
; SPARC-NEXT:    sethi 2097152, %o1
; SPARC-NEXT:    mov 1, %o0
; SPARC-NEXT:    cmp %o2, %o1
; SPARC-NEXT:    be .LBB9_6
; SPARC-NEXT:    mov %o0, %o2
; SPARC-NEXT:  ! %bb.5:
; SPARC-NEXT:    mov %g0, %o2
; SPARC-NEXT:  .LBB9_6:
; SPARC-NEXT:    fcmpd %f2, %f0
; SPARC-NEXT:    nop
; SPARC-NEXT:    fmovs %f2, %f4
; SPARC-NEXT:    fmovs %f3, %f5
; SPARC-NEXT:    fbuge .LBB9_17
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.7:
; SPARC-NEXT:    fcmpd %f4, %f4
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbu .LBB9_18
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB9_8:
; SPARC-NEXT:    cmp %o2, 0
; SPARC-NEXT:    bne .LBB9_10
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB9_9:
; SPARC-NEXT:    fmovs %f4, %f2
; SPARC-NEXT:    fmovs %f5, %f3
; SPARC-NEXT:  .LBB9_10:
; SPARC-NEXT:    ld [%sp+96], %o2
; SPARC-NEXT:    cmp %o2, %o1
; SPARC-NEXT:    be .LBB9_12
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.11:
; SPARC-NEXT:    mov %g0, %o0
; SPARC-NEXT:  .LBB9_12:
; SPARC-NEXT:    cmp %o0, 0
; SPARC-NEXT:    bne .LBB9_14
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.13:
; SPARC-NEXT:    fmovs %f2, %f0
; SPARC-NEXT:    fmovs %f3, %f1
; SPARC-NEXT:  .LBB9_14:
; SPARC-NEXT:    sethi %hi(.LCPI9_0), %o0
; SPARC-NEXT:    ldd [%o0+%lo(.LCPI9_0)], %f2
; SPARC-NEXT:    fcmpd %f4, %f2
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbe .LBB9_16
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.15:
; SPARC-NEXT:    fmovs %f4, %f0
; SPARC-NEXT:    fmovs %f5, %f1
; SPARC-NEXT:  .LBB9_16:
; SPARC-NEXT:    retl
; SPARC-NEXT:    add %sp, 120, %sp
; SPARC-NEXT:  .LBB9_17:
; SPARC-NEXT:    fmovs %f0, %f4
; SPARC-NEXT:    fmovs %f1, %f5
; SPARC-NEXT:    fcmpd %f4, %f4
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbo .LBB9_8
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB9_18:
; SPARC-NEXT:    cmp %o2, 0
; SPARC-NEXT:    be .LBB9_9
; SPARC-NEXT:    faddd %f4, %f4, %f4
; SPARC-NEXT:    ba .LBB9_10
; SPARC-NEXT:    nop
  %z = call double @llvm.minimumnum.f64(double %x, double %y)
  ret double %z
}

define double @minimumnum_double_nsz(double %x, double %y) {
;
; SPARC64-LABEL: minimumnum_double_nsz:
; SPARC64:         .cfi_startproc
; SPARC64-NEXT:  ! %bb.0:
; SPARC64-NEXT:    fcmpd %fcc0, %f0, %f0
; SPARC64-NEXT:    fmovdu %fcc0, %f2, %f0
; SPARC64-NEXT:    fcmpd %fcc0, %f2, %f2
; SPARC64-NEXT:    fmovdu %fcc0, %f0, %f2
; SPARC64-NEXT:    fcmpd %fcc0, %f0, %f2
; SPARC64-NEXT:    fmovdl %fcc0, %f0, %f2
; SPARC64-NEXT:    faddd %f2, %f2, %f0
; SPARC64-NEXT:    fcmpd %fcc0, %f2, %f2
; SPARC64-NEXT:    fmovdu %fcc0, %f0, %f2
; SPARC64-NEXT:    fmovd %f2, %f0
; SPARC64-NEXT:    retl
; SPARC64-NEXT:    nop
;
; SPARC-LABEL: minimumnum_double_nsz:
; SPARC:         .cfi_startproc
; SPARC-NEXT:  ! %bb.0:
; SPARC-NEXT:    add %sp, -112, %sp
; SPARC-NEXT:    .cfi_def_cfa_register %fp
; SPARC-NEXT:    .cfi_window_save
; SPARC-NEXT:    .cfi_register %o7, %i7
; SPARC-NEXT:    ! kill: def $o1 killed $o1 killed $o0_o1 def $o0_o1
; SPARC-NEXT:    ! kill: def $o3 killed $o3 killed $o2_o3 def $o2_o3
; SPARC-NEXT:    ! kill: def $o0 killed $o0 killed $o0_o1 def $o0_o1
; SPARC-NEXT:    std %o0, [%sp+104]
; SPARC-NEXT:    ! kill: def $o2 killed $o2 killed $o2_o3 def $o2_o3
; SPARC-NEXT:    std %o2, [%sp+96]
; SPARC-NEXT:    ldd [%sp+104], %f4
; SPARC-NEXT:    ldd [%sp+96], %f2
; SPARC-NEXT:    fcmpd %f4, %f4
; SPARC-NEXT:    nop
; SPARC-NEXT:    fmovs %f2, %f0
; SPARC-NEXT:    fmovs %f3, %f1
; SPARC-NEXT:    fbu .LBB10_2
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.1:
; SPARC-NEXT:    fmovs %f4, %f0
; SPARC-NEXT:    fmovs %f5, %f1
; SPARC-NEXT:  .LBB10_2:
; SPARC-NEXT:    fcmpd %f2, %f2
; SPARC-NEXT:    nop
; SPARC-NEXT:    fmovs %f0, %f4
; SPARC-NEXT:    fmovs %f1, %f5
; SPARC-NEXT:    fbo .LBB10_6
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.3:
; SPARC-NEXT:    fcmpd %f0, %f4
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbuge .LBB10_7
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB10_4:
; SPARC-NEXT:    fcmpd %f0, %f0
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbu .LBB10_8
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB10_5:
; SPARC-NEXT:    retl
; SPARC-NEXT:    add %sp, 112, %sp
; SPARC-NEXT:  .LBB10_6:
; SPARC-NEXT:    fmovs %f2, %f4
; SPARC-NEXT:    fmovs %f3, %f5
; SPARC-NEXT:    fcmpd %f0, %f4
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbl .LBB10_4
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB10_7:
; SPARC-NEXT:    fmovs %f4, %f0
; SPARC-NEXT:    fmovs %f5, %f1
; SPARC-NEXT:    fcmpd %f0, %f0
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbo .LBB10_5
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB10_8:
; SPARC-NEXT:    faddd %f0, %f0, %f0
; SPARC-NEXT:    retl
; SPARC-NEXT:    add %sp, 112, %sp
  %z = call nsz double @llvm.minimumnum.f64(double %x, double %y)
  ret double %z
}

define double @minimumnum_double_nnan(double %x, double %y) {
;
; SPARC64-LABEL: minimumnum_double_nnan:
; SPARC64:         .cfi_startproc
; SPARC64-NEXT:  ! %bb.0:
; SPARC64-NEXT:    add %sp, -144, %sp
; SPARC64-NEXT:    .cfi_def_cfa_register %fp
; SPARC64-NEXT:    .cfi_window_save
; SPARC64-NEXT:    .cfi_register %o7, %i7
; SPARC64-NEXT:    fdtos %f2, %f4
; SPARC64-NEXT:    st %f4, [%sp+2183]
; SPARC64-NEXT:    fdtos %f0, %f4
; SPARC64-NEXT:    st %f4, [%sp+2187]
; SPARC64-NEXT:    ld [%sp+2183], %o0
; SPARC64-NEXT:    mov %g0, %o1
; SPARC64-NEXT:    mov %g0, %o2
; SPARC64-NEXT:    ld [%sp+2187], %o3
; SPARC64-NEXT:    sethi 2097152, %o4
; SPARC64-NEXT:    cmp %o0, %o4
; SPARC64-NEXT:    move %icc, 1, %o1
; SPARC64-NEXT:    cmp %o3, %o4
; SPARC64-NEXT:    move %icc, 1, %o2
; SPARC64-NEXT:    fcmpd %fcc0, %f0, %f2
; SPARC64-NEXT:    fmovd %f2, %f4
; SPARC64-NEXT:    fmovdl %fcc0, %f0, %f4
; SPARC64-NEXT:    cmp %o2, 0
; SPARC64-NEXT:    fmovd %f4, %f6
; SPARC64-NEXT:    sethi %h44(.LCPI11_0), %o0
; SPARC64-NEXT:    add %o0, %m44(.LCPI11_0), %o0
; SPARC64-NEXT:    sllx %o0, 12, %o0
; SPARC64-NEXT:    ldd [%o0+%l44(.LCPI11_0)], %f8
; SPARC64-NEXT:    fmovdne %icc, %f0, %f6
; SPARC64-NEXT:    cmp %o1, 0
; SPARC64-NEXT:    fmovdne %icc, %f2, %f6
; SPARC64-NEXT:    fcmpd %fcc0, %f4, %f8
; SPARC64-NEXT:    fmovde %fcc0, %f6, %f4
; SPARC64-NEXT:    fmovd %f4, %f0
; SPARC64-NEXT:    retl
; SPARC64-NEXT:    add %sp, 144, %sp
;
; SPARC-LABEL: minimumnum_double_nnan:
; SPARC:         .cfi_startproc
; SPARC-NEXT:  ! %bb.0:
; SPARC-NEXT:    add %sp, -120, %sp
; SPARC-NEXT:    .cfi_def_cfa_register %fp
; SPARC-NEXT:    .cfi_window_save
; SPARC-NEXT:    .cfi_register %o7, %i7
; SPARC-NEXT:    ! kill: def $o1 killed $o1 killed $o0_o1 def $o0_o1
; SPARC-NEXT:    ! kill: def $o3 killed $o3 killed $o2_o3 def $o2_o3
; SPARC-NEXT:    ! kill: def $o0 killed $o0 killed $o0_o1 def $o0_o1
; SPARC-NEXT:    std %o0, [%sp+112]
; SPARC-NEXT:    ! kill: def $o2 killed $o2 killed $o2_o3 def $o2_o3
; SPARC-NEXT:    std %o2, [%sp+104]
; SPARC-NEXT:    ldd [%sp+104], %f0
; SPARC-NEXT:    ldd [%sp+112], %f2
; SPARC-NEXT:    fdtos %f0, %f4
; SPARC-NEXT:    st %f4, [%sp+96]
; SPARC-NEXT:    fdtos %f2, %f4
; SPARC-NEXT:    st %f4, [%sp+100]
; SPARC-NEXT:    ld [%sp+96], %o0
; SPARC-NEXT:    sethi 2097152, %o2
; SPARC-NEXT:    mov 1, %o1
; SPARC-NEXT:    cmp %o0, %o2
; SPARC-NEXT:    be .LBB11_2
; SPARC-NEXT:    mov %o1, %o0
; SPARC-NEXT:  ! %bb.1:
; SPARC-NEXT:    mov %g0, %o0
; SPARC-NEXT:  .LBB11_2:
; SPARC-NEXT:    ld [%sp+100], %o3
; SPARC-NEXT:    cmp %o3, %o2
; SPARC-NEXT:    be .LBB11_4
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.3:
; SPARC-NEXT:    mov %g0, %o1
; SPARC-NEXT:  .LBB11_4:
; SPARC-NEXT:    fcmpd %f2, %f0
; SPARC-NEXT:    nop
; SPARC-NEXT:    fmovs %f2, %f4
; SPARC-NEXT:    fmovs %f3, %f5
; SPARC-NEXT:    fbuge .LBB11_11
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.5:
; SPARC-NEXT:    cmp %o1, 0
; SPARC-NEXT:    be .LBB11_12
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB11_6:
; SPARC-NEXT:    cmp %o0, 0
; SPARC-NEXT:    bne .LBB11_8
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB11_7:
; SPARC-NEXT:    fmovs %f2, %f0
; SPARC-NEXT:    fmovs %f3, %f1
; SPARC-NEXT:  .LBB11_8:
; SPARC-NEXT:    sethi %hi(.LCPI11_0), %o0
; SPARC-NEXT:    ldd [%o0+%lo(.LCPI11_0)], %f2
; SPARC-NEXT:    fcmpd %f4, %f2
; SPARC-NEXT:    nop
; SPARC-NEXT:    fbe .LBB11_10
; SPARC-NEXT:    nop
; SPARC-NEXT:  ! %bb.9:
; SPARC-NEXT:    fmovs %f4, %f0
; SPARC-NEXT:    fmovs %f5, %f1
; SPARC-NEXT:  .LBB11_10:
; SPARC-NEXT:    retl
; SPARC-NEXT:    add %sp, 120, %sp
; SPARC-NEXT:  .LBB11_11:
; SPARC-NEXT:    fmovs %f0, %f4
; SPARC-NEXT:    fmovs %f1, %f5
; SPARC-NEXT:    cmp %o1, 0
; SPARC-NEXT:    bne .LBB11_6
; SPARC-NEXT:    nop
; SPARC-NEXT:  .LBB11_12:
; SPARC-NEXT:    fmovs %f4, %f2
; SPARC-NEXT:    fmovs %f5, %f3
; SPARC-NEXT:    cmp %o0, 0
; SPARC-NEXT:    be .LBB11_7
; SPARC-NEXT:    nop
; SPARC-NEXT:    ba .LBB11_8
; SPARC-NEXT:    nop
  %z = call nnan double @llvm.minimumnum.f64(double %x, double %y)
  ret double %z
}
