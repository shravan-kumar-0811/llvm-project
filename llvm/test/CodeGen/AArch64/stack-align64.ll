; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple aarch64-unknown-linux-gnu -O0  < %s | FileCheck %s

target datalayout = "e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128-Fn32"
target triple = "aarch64-unknown-linux-gnu"

declare void @other()

define dso_local void @func_align64() #0 {
; CHECK-LABEL: func_align64:
; CHECK:       // %bb.0: // %entry
; CHECK-NEXT:    sub sp, sp, #64
; CHECK-NEXT:    .cfi_def_cfa_offset 64
; CHECK-NEXT:    stp x29, x30, [sp, #48] // 16-byte Folded Spill
; CHECK-NEXT:    add x29, sp, #48
; CHECK-NEXT:    .cfi_def_cfa w29, 16
; CHECK-NEXT:    .cfi_offset w30, -8
; CHECK-NEXT:    .cfi_offset w29, -16
; CHECK-NEXT:    bl other
; CHECK-NEXT:    .cfi_def_cfa wsp, 64
; CHECK-NEXT:    ldp x29, x30, [sp, #48] // 16-byte Folded Reload
; CHECK-NEXT:    add sp, sp, #64
; CHECK-NEXT:    .cfi_def_cfa_offset 0
; CHECK-NEXT:    .cfi_restore w30
; CHECK-NEXT:    .cfi_restore w29
; CHECK-NEXT:    ret
entry:
  call void @other()
  ret void
}


attributes #0 = { uwtable "frame-pointer"="non-leaf" }
!llvm.module.flags = !{!0}
!0 = !{i32 1, !"override-stack-alignment", i32 64}
