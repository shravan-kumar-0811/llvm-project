; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc --mtriple=s390x < %s | FileCheck %s --check-prefix=S390X

declare float @llvm.maximumnum.f32(float, float)
declare double @llvm.maximumnum.f64(double, double)
declare float @llvm.minimumnum.f32(float, float)
declare double @llvm.minimumnum.f64(double, double)

define float @maximumnum_float(float %x, float %y) {
;
;
; S390X-LABEL: maximumnum_float:
; S390X:       # %bb.0:
; S390X-NEXT:    cebr %f0, %f0
; S390X-NEXT:    ler %f1, %f2
; S390X-NEXT:    jo .LBB0_2
; S390X-NEXT:  # %bb.1:
; S390X-NEXT:    ler %f1, %f0
; S390X-NEXT:  .LBB0_2:
; S390X-NEXT:    cebr %f2, %f2
; S390X-NEXT:    ler %f0, %f1
; S390X-NEXT:    jo .LBB0_4
; S390X-NEXT:  # %bb.3:
; S390X-NEXT:    ler %f0, %f2
; S390X-NEXT:  .LBB0_4:
; S390X-NEXT:    cebr %f1, %f0
; S390X-NEXT:    ler %f2, %f1
; S390X-NEXT:    jh .LBB0_6
; S390X-NEXT:  # %bb.5:
; S390X-NEXT:    ler %f2, %f0
; S390X-NEXT:  .LBB0_6:
; S390X-NEXT:    cebr %f2, %f2
; S390X-NEXT:    jno .LBB0_8
; S390X-NEXT:  # %bb.7:
; S390X-NEXT:    aebr %f2, %f2
; S390X-NEXT:  .LBB0_8:
; S390X-NEXT:    tceb %f1, 2048
; S390X-NEXT:    ipm %r0
; S390X-NEXT:    srl %r0, 28
; S390X-NEXT:    cijlh %r0, 0, .LBB0_10
; S390X-NEXT:  # %bb.9:
; S390X-NEXT:    ler %f1, %f2
; S390X-NEXT:  .LBB0_10:
; S390X-NEXT:    tceb %f0, 2048
; S390X-NEXT:    ipm %r0
; S390X-NEXT:    srl %r0, 28
; S390X-NEXT:    cijlh %r0, 0, .LBB0_12
; S390X-NEXT:  # %bb.11:
; S390X-NEXT:    ler %f0, %f1
; S390X-NEXT:  .LBB0_12:
; S390X-NEXT:    ltebr %f1, %f2
; S390X-NEXT:    ber %r14
; S390X-NEXT:  .LBB0_13:
; S390X-NEXT:    ler %f0, %f2
; S390X-NEXT:    br %r14
  %z = call float @llvm.maximumnum.f32(float %x, float %y)
  ret float %z
}

define float @maximumnum_float_nsz(float %x, float %y) {
;
;
; S390X-LABEL: maximumnum_float_nsz:
; S390X:       # %bb.0:
; S390X-NEXT:    ler %f1, %f0
; S390X-NEXT:    cebr %f0, %f0
; S390X-NEXT:    ler %f0, %f2
; S390X-NEXT:    jo .LBB1_2
; S390X-NEXT:  # %bb.1:
; S390X-NEXT:    ler %f0, %f1
; S390X-NEXT:  .LBB1_2:
; S390X-NEXT:    cebr %f2, %f2
; S390X-NEXT:    ler %f1, %f0
; S390X-NEXT:    jo .LBB1_4
; S390X-NEXT:  # %bb.3:
; S390X-NEXT:    ler %f1, %f2
; S390X-NEXT:  .LBB1_4:
; S390X-NEXT:    cebr %f0, %f1
; S390X-NEXT:    jh .LBB1_6
; S390X-NEXT:  # %bb.5:
; S390X-NEXT:    ler %f0, %f1
; S390X-NEXT:  .LBB1_6:
; S390X-NEXT:    cebr %f0, %f0
; S390X-NEXT:    bnor %r14
; S390X-NEXT:  .LBB1_7:
; S390X-NEXT:    aebr %f0, %f0
; S390X-NEXT:    br %r14
  %z = call nsz float @llvm.maximumnum.f32(float %x, float %y)
  ret float %z
}

define float @maximumnum_float_nnan(float %x, float %y) {
;
;
; S390X-LABEL: maximumnum_float_nnan:
; S390X:       # %bb.0:
; S390X-NEXT:    cebr %f0, %f2
; S390X-NEXT:    ler %f1, %f0
; S390X-NEXT:    jh .LBB2_2
; S390X-NEXT:  # %bb.1:
; S390X-NEXT:    ler %f1, %f2
; S390X-NEXT:  .LBB2_2:
; S390X-NEXT:    tceb %f0, 2048
; S390X-NEXT:    ipm %r0
; S390X-NEXT:    srl %r0, 28
; S390X-NEXT:    cijlh %r0, 0, .LBB2_4
; S390X-NEXT:  # %bb.3:
; S390X-NEXT:    ler %f0, %f1
; S390X-NEXT:  .LBB2_4:
; S390X-NEXT:    tceb %f2, 2048
; S390X-NEXT:    ipm %r0
; S390X-NEXT:    srl %r0, 28
; S390X-NEXT:    cije %r0, 0, .LBB2_7
; S390X-NEXT:  # %bb.5:
; S390X-NEXT:    ltebr %f0, %f1
; S390X-NEXT:    jne .LBB2_8
; S390X-NEXT:  .LBB2_6:
; S390X-NEXT:    ler %f0, %f2
; S390X-NEXT:    br %r14
; S390X-NEXT:  .LBB2_7:
; S390X-NEXT:    ler %f2, %f0
; S390X-NEXT:    ltebr %f0, %f1
; S390X-NEXT:    je .LBB2_6
; S390X-NEXT:  .LBB2_8:
; S390X-NEXT:    ler %f2, %f1
; S390X-NEXT:    ler %f0, %f2
; S390X-NEXT:    br %r14
  %z = call nnan float @llvm.maximumnum.f32(float %x, float %y)
  ret float %z
}


define double @maximumnum_double(double %x, double %y) {
;
;
; S390X-LABEL: maximumnum_double:
; S390X:       # %bb.0:
; S390X-NEXT:    cdbr %f0, %f0
; S390X-NEXT:    ldr %f1, %f2
; S390X-NEXT:    jo .LBB3_2
; S390X-NEXT:  # %bb.1:
; S390X-NEXT:    ldr %f1, %f0
; S390X-NEXT:  .LBB3_2:
; S390X-NEXT:    cdbr %f2, %f2
; S390X-NEXT:    ldr %f0, %f1
; S390X-NEXT:    jo .LBB3_4
; S390X-NEXT:  # %bb.3:
; S390X-NEXT:    ldr %f0, %f2
; S390X-NEXT:  .LBB3_4:
; S390X-NEXT:    cdbr %f1, %f0
; S390X-NEXT:    ldr %f2, %f1
; S390X-NEXT:    jh .LBB3_6
; S390X-NEXT:  # %bb.5:
; S390X-NEXT:    ldr %f2, %f0
; S390X-NEXT:  .LBB3_6:
; S390X-NEXT:    cdbr %f2, %f2
; S390X-NEXT:    jno .LBB3_8
; S390X-NEXT:  # %bb.7:
; S390X-NEXT:    adbr %f2, %f2
; S390X-NEXT:  .LBB3_8:
; S390X-NEXT:    tcdb %f1, 2048
; S390X-NEXT:    ipm %r0
; S390X-NEXT:    srl %r0, 28
; S390X-NEXT:    cijlh %r0, 0, .LBB3_10
; S390X-NEXT:  # %bb.9:
; S390X-NEXT:    ldr %f1, %f2
; S390X-NEXT:  .LBB3_10:
; S390X-NEXT:    tcdb %f0, 2048
; S390X-NEXT:    ipm %r0
; S390X-NEXT:    srl %r0, 28
; S390X-NEXT:    cijlh %r0, 0, .LBB3_12
; S390X-NEXT:  # %bb.11:
; S390X-NEXT:    ldr %f0, %f1
; S390X-NEXT:  .LBB3_12:
; S390X-NEXT:    ltdbr %f1, %f2
; S390X-NEXT:    ber %r14
; S390X-NEXT:  .LBB3_13:
; S390X-NEXT:    ldr %f0, %f2
; S390X-NEXT:    br %r14
  %z = call double @llvm.maximumnum.f64(double %x, double %y)
  ret double %z
}

define double @maximumnum_double_nsz(double %x, double %y) {
;
;
; S390X-LABEL: maximumnum_double_nsz:
; S390X:       # %bb.0:
; S390X-NEXT:    ldr %f1, %f0
; S390X-NEXT:    cdbr %f0, %f0
; S390X-NEXT:    ldr %f0, %f2
; S390X-NEXT:    jo .LBB4_2
; S390X-NEXT:  # %bb.1:
; S390X-NEXT:    ldr %f0, %f1
; S390X-NEXT:  .LBB4_2:
; S390X-NEXT:    cdbr %f2, %f2
; S390X-NEXT:    ldr %f1, %f0
; S390X-NEXT:    jo .LBB4_4
; S390X-NEXT:  # %bb.3:
; S390X-NEXT:    ldr %f1, %f2
; S390X-NEXT:  .LBB4_4:
; S390X-NEXT:    cdbr %f0, %f1
; S390X-NEXT:    jh .LBB4_6
; S390X-NEXT:  # %bb.5:
; S390X-NEXT:    ldr %f0, %f1
; S390X-NEXT:  .LBB4_6:
; S390X-NEXT:    cdbr %f0, %f0
; S390X-NEXT:    bnor %r14
; S390X-NEXT:  .LBB4_7:
; S390X-NEXT:    adbr %f0, %f0
; S390X-NEXT:    br %r14
  %z = call nsz double @llvm.maximumnum.f64(double %x, double %y)
  ret double %z
}

define double @maximumnum_double_nnan(double %x, double %y) {
;
;
; S390X-LABEL: maximumnum_double_nnan:
; S390X:       # %bb.0:
; S390X-NEXT:    cdbr %f0, %f2
; S390X-NEXT:    ldr %f1, %f0
; S390X-NEXT:    jh .LBB5_2
; S390X-NEXT:  # %bb.1:
; S390X-NEXT:    ldr %f1, %f2
; S390X-NEXT:  .LBB5_2:
; S390X-NEXT:    tcdb %f0, 2048
; S390X-NEXT:    ipm %r0
; S390X-NEXT:    srl %r0, 28
; S390X-NEXT:    cijlh %r0, 0, .LBB5_4
; S390X-NEXT:  # %bb.3:
; S390X-NEXT:    ldr %f0, %f1
; S390X-NEXT:  .LBB5_4:
; S390X-NEXT:    tcdb %f2, 2048
; S390X-NEXT:    ipm %r0
; S390X-NEXT:    srl %r0, 28
; S390X-NEXT:    cije %r0, 0, .LBB5_7
; S390X-NEXT:  # %bb.5:
; S390X-NEXT:    ltdbr %f0, %f1
; S390X-NEXT:    jne .LBB5_8
; S390X-NEXT:  .LBB5_6:
; S390X-NEXT:    ldr %f0, %f2
; S390X-NEXT:    br %r14
; S390X-NEXT:  .LBB5_7:
; S390X-NEXT:    ldr %f2, %f0
; S390X-NEXT:    ltdbr %f0, %f1
; S390X-NEXT:    je .LBB5_6
; S390X-NEXT:  .LBB5_8:
; S390X-NEXT:    ldr %f2, %f1
; S390X-NEXT:    ldr %f0, %f2
; S390X-NEXT:    br %r14
  %z = call nnan double @llvm.maximumnum.f64(double %x, double %y)
  ret double %z
}

define float @minimumnum_float(float %x, float %y) {
;
;
; S390X-LABEL: minimumnum_float:
; S390X:       # %bb.0:
; S390X-NEXT:    cebr %f0, %f0
; S390X-NEXT:    ler %f1, %f2
; S390X-NEXT:    jo .LBB6_2
; S390X-NEXT:  # %bb.1:
; S390X-NEXT:    ler %f1, %f0
; S390X-NEXT:  .LBB6_2:
; S390X-NEXT:    cebr %f2, %f2
; S390X-NEXT:    ler %f0, %f1
; S390X-NEXT:    jo .LBB6_4
; S390X-NEXT:  # %bb.3:
; S390X-NEXT:    ler %f0, %f2
; S390X-NEXT:  .LBB6_4:
; S390X-NEXT:    cebr %f1, %f0
; S390X-NEXT:    ler %f2, %f1
; S390X-NEXT:    jl .LBB6_6
; S390X-NEXT:  # %bb.5:
; S390X-NEXT:    ler %f2, %f0
; S390X-NEXT:  .LBB6_6:
; S390X-NEXT:    cebr %f2, %f2
; S390X-NEXT:    jno .LBB6_8
; S390X-NEXT:  # %bb.7:
; S390X-NEXT:    aebr %f2, %f2
; S390X-NEXT:  .LBB6_8:
; S390X-NEXT:    tceb %f1, 1024
; S390X-NEXT:    ipm %r0
; S390X-NEXT:    srl %r0, 28
; S390X-NEXT:    cijlh %r0, 0, .LBB6_10
; S390X-NEXT:  # %bb.9:
; S390X-NEXT:    ler %f1, %f2
; S390X-NEXT:  .LBB6_10:
; S390X-NEXT:    tceb %f0, 1024
; S390X-NEXT:    ipm %r0
; S390X-NEXT:    srl %r0, 28
; S390X-NEXT:    cijlh %r0, 0, .LBB6_12
; S390X-NEXT:  # %bb.11:
; S390X-NEXT:    ler %f0, %f1
; S390X-NEXT:  .LBB6_12:
; S390X-NEXT:    ltebr %f1, %f2
; S390X-NEXT:    ber %r14
; S390X-NEXT:  .LBB6_13:
; S390X-NEXT:    ler %f0, %f2
; S390X-NEXT:    br %r14
  %z = call float @llvm.minimumnum.f32(float %x, float %y)
  ret float %z
}

define float @minimumnum_float_nsz(float %x, float %y) {
;
;
; S390X-LABEL: minimumnum_float_nsz:
; S390X:       # %bb.0:
; S390X-NEXT:    ler %f1, %f0
; S390X-NEXT:    cebr %f0, %f0
; S390X-NEXT:    ler %f0, %f2
; S390X-NEXT:    jo .LBB7_2
; S390X-NEXT:  # %bb.1:
; S390X-NEXT:    ler %f0, %f1
; S390X-NEXT:  .LBB7_2:
; S390X-NEXT:    cebr %f2, %f2
; S390X-NEXT:    ler %f1, %f0
; S390X-NEXT:    jo .LBB7_4
; S390X-NEXT:  # %bb.3:
; S390X-NEXT:    ler %f1, %f2
; S390X-NEXT:  .LBB7_4:
; S390X-NEXT:    cebr %f0, %f1
; S390X-NEXT:    jl .LBB7_6
; S390X-NEXT:  # %bb.5:
; S390X-NEXT:    ler %f0, %f1
; S390X-NEXT:  .LBB7_6:
; S390X-NEXT:    cebr %f0, %f0
; S390X-NEXT:    bnor %r14
; S390X-NEXT:  .LBB7_7:
; S390X-NEXT:    aebr %f0, %f0
; S390X-NEXT:    br %r14
  %z = call nsz float @llvm.minimumnum.f32(float %x, float %y)
  ret float %z
}

define float @minimumnum_float_nnan(float %x, float %y) {
;
;
; S390X-LABEL: minimumnum_float_nnan:
; S390X:       # %bb.0:
; S390X-NEXT:    cebr %f0, %f2
; S390X-NEXT:    ler %f1, %f0
; S390X-NEXT:    jl .LBB8_2
; S390X-NEXT:  # %bb.1:
; S390X-NEXT:    ler %f1, %f2
; S390X-NEXT:  .LBB8_2:
; S390X-NEXT:    tceb %f0, 1024
; S390X-NEXT:    ipm %r0
; S390X-NEXT:    srl %r0, 28
; S390X-NEXT:    cijlh %r0, 0, .LBB8_4
; S390X-NEXT:  # %bb.3:
; S390X-NEXT:    ler %f0, %f1
; S390X-NEXT:  .LBB8_4:
; S390X-NEXT:    tceb %f2, 1024
; S390X-NEXT:    ipm %r0
; S390X-NEXT:    srl %r0, 28
; S390X-NEXT:    cije %r0, 0, .LBB8_7
; S390X-NEXT:  # %bb.5:
; S390X-NEXT:    ltebr %f0, %f1
; S390X-NEXT:    jne .LBB8_8
; S390X-NEXT:  .LBB8_6:
; S390X-NEXT:    ler %f0, %f2
; S390X-NEXT:    br %r14
; S390X-NEXT:  .LBB8_7:
; S390X-NEXT:    ler %f2, %f0
; S390X-NEXT:    ltebr %f0, %f1
; S390X-NEXT:    je .LBB8_6
; S390X-NEXT:  .LBB8_8:
; S390X-NEXT:    ler %f2, %f1
; S390X-NEXT:    ler %f0, %f2
; S390X-NEXT:    br %r14
  %z = call nnan float @llvm.minimumnum.f32(float %x, float %y)
  ret float %z
}

define double @minimumnum_double(double %x, double %y) {
;
;
; S390X-LABEL: minimumnum_double:
; S390X:       # %bb.0:
; S390X-NEXT:    cdbr %f0, %f0
; S390X-NEXT:    ldr %f1, %f2
; S390X-NEXT:    jo .LBB9_2
; S390X-NEXT:  # %bb.1:
; S390X-NEXT:    ldr %f1, %f0
; S390X-NEXT:  .LBB9_2:
; S390X-NEXT:    cdbr %f2, %f2
; S390X-NEXT:    ldr %f0, %f1
; S390X-NEXT:    jo .LBB9_4
; S390X-NEXT:  # %bb.3:
; S390X-NEXT:    ldr %f0, %f2
; S390X-NEXT:  .LBB9_4:
; S390X-NEXT:    cdbr %f1, %f0
; S390X-NEXT:    ldr %f2, %f1
; S390X-NEXT:    jl .LBB9_6
; S390X-NEXT:  # %bb.5:
; S390X-NEXT:    ldr %f2, %f0
; S390X-NEXT:  .LBB9_6:
; S390X-NEXT:    cdbr %f2, %f2
; S390X-NEXT:    jno .LBB9_8
; S390X-NEXT:  # %bb.7:
; S390X-NEXT:    adbr %f2, %f2
; S390X-NEXT:  .LBB9_8:
; S390X-NEXT:    tcdb %f1, 1024
; S390X-NEXT:    ipm %r0
; S390X-NEXT:    srl %r0, 28
; S390X-NEXT:    cijlh %r0, 0, .LBB9_10
; S390X-NEXT:  # %bb.9:
; S390X-NEXT:    ldr %f1, %f2
; S390X-NEXT:  .LBB9_10:
; S390X-NEXT:    tcdb %f0, 1024
; S390X-NEXT:    ipm %r0
; S390X-NEXT:    srl %r0, 28
; S390X-NEXT:    cijlh %r0, 0, .LBB9_12
; S390X-NEXT:  # %bb.11:
; S390X-NEXT:    ldr %f0, %f1
; S390X-NEXT:  .LBB9_12:
; S390X-NEXT:    ltdbr %f1, %f2
; S390X-NEXT:    ber %r14
; S390X-NEXT:  .LBB9_13:
; S390X-NEXT:    ldr %f0, %f2
; S390X-NEXT:    br %r14
  %z = call double @llvm.minimumnum.f64(double %x, double %y)
  ret double %z
}

define double @minimumnum_double_nsz(double %x, double %y) {
;
;
; S390X-LABEL: minimumnum_double_nsz:
; S390X:       # %bb.0:
; S390X-NEXT:    ldr %f1, %f0
; S390X-NEXT:    cdbr %f0, %f0
; S390X-NEXT:    ldr %f0, %f2
; S390X-NEXT:    jo .LBB10_2
; S390X-NEXT:  # %bb.1:
; S390X-NEXT:    ldr %f0, %f1
; S390X-NEXT:  .LBB10_2:
; S390X-NEXT:    cdbr %f2, %f2
; S390X-NEXT:    ldr %f1, %f0
; S390X-NEXT:    jo .LBB10_4
; S390X-NEXT:  # %bb.3:
; S390X-NEXT:    ldr %f1, %f2
; S390X-NEXT:  .LBB10_4:
; S390X-NEXT:    cdbr %f0, %f1
; S390X-NEXT:    jl .LBB10_6
; S390X-NEXT:  # %bb.5:
; S390X-NEXT:    ldr %f0, %f1
; S390X-NEXT:  .LBB10_6:
; S390X-NEXT:    cdbr %f0, %f0
; S390X-NEXT:    bnor %r14
; S390X-NEXT:  .LBB10_7:
; S390X-NEXT:    adbr %f0, %f0
; S390X-NEXT:    br %r14
  %z = call nsz double @llvm.minimumnum.f64(double %x, double %y)
  ret double %z
}

define double @minimumnum_double_nnan(double %x, double %y) {
;
;
; S390X-LABEL: minimumnum_double_nnan:
; S390X:       # %bb.0:
; S390X-NEXT:    cdbr %f0, %f2
; S390X-NEXT:    ldr %f1, %f0
; S390X-NEXT:    jl .LBB11_2
; S390X-NEXT:  # %bb.1:
; S390X-NEXT:    ldr %f1, %f2
; S390X-NEXT:  .LBB11_2:
; S390X-NEXT:    tcdb %f0, 1024
; S390X-NEXT:    ipm %r0
; S390X-NEXT:    srl %r0, 28
; S390X-NEXT:    cijlh %r0, 0, .LBB11_4
; S390X-NEXT:  # %bb.3:
; S390X-NEXT:    ldr %f0, %f1
; S390X-NEXT:  .LBB11_4:
; S390X-NEXT:    tcdb %f2, 1024
; S390X-NEXT:    ipm %r0
; S390X-NEXT:    srl %r0, 28
; S390X-NEXT:    cije %r0, 0, .LBB11_7
; S390X-NEXT:  # %bb.5:
; S390X-NEXT:    ltdbr %f0, %f1
; S390X-NEXT:    jne .LBB11_8
; S390X-NEXT:  .LBB11_6:
; S390X-NEXT:    ldr %f0, %f2
; S390X-NEXT:    br %r14
; S390X-NEXT:  .LBB11_7:
; S390X-NEXT:    ldr %f2, %f0
; S390X-NEXT:    ltdbr %f0, %f1
; S390X-NEXT:    je .LBB11_6
; S390X-NEXT:  .LBB11_8:
; S390X-NEXT:    ldr %f2, %f1
; S390X-NEXT:    ldr %f0, %f2
; S390X-NEXT:    br %r14
  %z = call nnan double @llvm.minimumnum.f64(double %x, double %y)
  ret double %z
}
