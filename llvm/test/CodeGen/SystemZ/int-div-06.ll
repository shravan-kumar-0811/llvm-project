; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; Test that divisions by constants are implemented as multiplications.
;
; RUN: llc < %s -mtriple=s390x-linux-gnu < %s | FileCheck %s

; Check signed 32-bit division.
define i32 @f1(i32 %a) {
; CHECK-LABEL: f1:
; CHECK:       # %bb.0:
; CHECK-NEXT:    lgfr %r0, %r2
; CHECK-NEXT:    msgfi %r0, 502748801
; CHECK-NEXT:    srlg %r1, %r0, 63
; CHECK-NEXT:    srag %r2, %r0, 46
; CHECK-NEXT:    ar %r2, %r1
; CHECK-NEXT:    # kill: def $r2l killed $r2l killed $r2d
; CHECK-NEXT:    br %r14
  %b = sdiv i32 %a, 139968
  ret i32 %b
}

; Check unsigned 32-bit division.
define i32 @f2(i32 %a) {
; CHECK-LABEL: f2:
; CHECK:       # %bb.0:
; CHECK-NEXT:    llgfr %r0, %r2
; CHECK-NEXT:    llilf %r1, 4021990407
; CHECK-NEXT:    msgr %r1, %r0
; CHECK-NEXT:    srlg %r2, %r1, 49
; CHECK-NEXT:    # kill: def $r2l killed $r2l killed $r2d
; CHECK-NEXT:    br %r14
  %b = udiv i32 %a, 139968
  ret i32 %b
}

; Check signed 64-bit division.
define i64 @f3(i64 %dummy, i64 %a) {
; CHECK-LABEL: f3:
; CHECK:       # %bb.0:
; CHECK-NEXT:    # kill: def $r3d killed $r3d def $r2q
; CHECK-NEXT:    srag %r0, %r3, 63
; CHECK-NEXT:    llihf %r1, 1005497601
; CHECK-NEXT:    oilf %r1, 4251762321
; CHECK-NEXT:    ngr %r0, %r1
; CHECK-NEXT:    mlgr %r2, %r1
; CHECK-NEXT:    sgr %r2, %r0
; CHECK-NEXT:    srlg %r0, %r2, 63
; CHECK-NEXT:    srag %r2, %r2, 15
; CHECK-NEXT:    agr %r2, %r0
; CHECK-NEXT:    br %r14
  %b = sdiv i64 %a, 139968
  ret i64 %b
}

; Check unsigned 64-bit division.
define i64 @f4(i64 %dummy, i64 %a) {
; CHECK-LABEL: f4:
; CHECK:       # %bb.0:
; CHECK-NEXT:    # kill: def $r3d killed $r3d def $r2q
; CHECK-NEXT:    llihf %r0, 2010995203
; CHECK-NEXT:    oilf %r0, 4208557345
; CHECK-NEXT:    mlgr %r2, %r0
; CHECK-NEXT:    srlg %r2, %r2, 16
; CHECK-NEXT:    br %r14
  %b = udiv i64 %a, 139968
  ret i64 %b
}
