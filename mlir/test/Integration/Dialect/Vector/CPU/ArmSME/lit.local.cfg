import sys

# ArmSME tests must be enabled via build flag.
if not config.mlir_run_arm_sme_tests:
    config.unsupported = True

# No JIT on win32.
if sys.platform == "win32":
    config.unsupported = True

mlir_runner_utils_file_name = "/libmlir_runner_utils" + config.llvm_shlib_ext
mlir_c_runner_utils_file_name = "/libmlir_c_runner_utils" + config.llvm_shlib_ext
mlir_arm_runner_utils_file_name = "/libmlir_arm_runner_utils" + config.llvm_shlib_ext
arm_sme_abi_shlib_file_name = "/libmlir_arm_sme_abi_stubs" + config.llvm_shlib_ext
if config.arm_emulator_utils_lib_dir:
    # Use mlir runtime libs from the location passed by -DARM_EMULATOR_UTILS_LIB_DIR.
    config.substitutions.append(
        (
            "%native_mlir_runner_utils",
            config.arm_emulator_utils_lib_dir + mlir_runner_utils_file_name
        )
    )
    config.substitutions.append(
        (
            "%native_mlir_c_runner_utils",
            config.arm_emulator_utils_lib_dir + mlir_c_runner_utils_file_name
        )
    )
    config.substitutions.append(
        (   "%native_mlir_arm_runner_utils",
            config.arm_emulator_utils_lib_dir + mlir_arm_runner_utils_file_name
        )
    )
    config.substitutions.append(
        (
            "%native_arm_sme_abi_shlib",
             # Use passed Arm SME ABI routines, if not present default to stubs.
            config.arm_sme_abi_routines_shlib or (config.arm_emulator_utils_lib_dir + arm_sme_abi_shlib_file_name)
        )
    )
else:
    config.substitutions.append(
        (
            "%native_mlir_runner_utils",
            config.mlir_lib_dir + mlir_runner_utils_file_name
        )
    )
    config.substitutions.append(
        (
            "%native_mlir_c_runner_utils",
            config.mlir_lib_dir + mlir_c_runner_utils_file_name
        )
    )
    config.substitutions.append(
        (
            "%native_mlir_arm_runner_utils",
            config.mlir_lib_dir + mlir_arm_runner_utils_file_name
        )
    )
    config.substitutions.append(
        (
            "%native_arm_sme_abi_shlib",
            # Use passed Arm SME ABI routines, if not present default to stubs.
            config.arm_sme_abi_routines_shlib or (config.mlir_lib_dir + arm_sme_abi_shlib_file_name)
        )
    )
