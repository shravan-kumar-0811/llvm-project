# This file defines pre-commit CI for libc++, libc++abi, and libunwind (on Github).
#
# We split the configurations in multiple stages with the intent of saving compute time
# when a job fails early in the pipeline. This is why the jobs are marked as `continue-on-error: false`.
# We try to run the CI configurations with the most signal in the first stage.
#
# Stages 1 & 2 are meant to be "smoke tests", and are meant to catch most build/test failures quickly and without using
# too many resources.
# Stage 3 is "everything else", and is meant to catch breakages on more niche or unique configurations.
#
# Therefore, we "fail-fast" for any failures during stages 1 & 2, meaning any job failing cancels all other running jobs,
# under the assumption that if the "smoke tests" fail, then the other configurations will likely fail in the same way.
# However, stage 3 does not fail fast, as it's more likely that any one job failing is a flake or a configuration-specific
#
name: Build and Test libc++
on:
  pull_request:
    paths:
      - 'libcxx/**'
      - 'libcxxabi/**'
      - 'libunwind/**'
      - 'runtimes/**'
      - 'cmake/**'
      - '.github/workflows/libcxx-build-and-test.yaml'
  schedule:
    # Run nightly at 08:00 UTC (aka 00:00 Pacific, aka 03:00 Eastern)
    - cron: '0 8 * * *'

permissions:
  contents: read # Default everything to read-only

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true


env:
  # LLVM POST-BRANCH bump version
  # LLVM POST-BRANCH add compiler test for ToT - 1, e.g. "Clang 17"
  # LLVM RELEASE bump remove compiler ToT - 3, e.g. "Clang 15"
  LLVM_HEAD_VERSION: "19"   # Used compiler, update POST-BRANCH.
  LLVM_PREVIOUS_VERSION: "18"
  LLVM_OLDEST_VERSION: "17"
  GCC_STABLE_VERSION: "13"
  LLVM_SYMBOLIZER_PATH: "/usr/bin/llvm-symbolizer-19"
  CLANG_CRASH_DIAGNOSTICS_DIR: "crash_diagnostics"


jobs:
  macos:
    runs-on: macos-14
    strategy:
      fail-fast: false
      matrix:
        config: [
          generic-cxx03,
          generic-cxx23,
          generic-modules,
          apple-configuration
        ]
    steps:
      - uses: actions/checkout@v4
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 'latest-stable'
      - uses: seanmiddleditch/gha-setup-ninja@master
      - name: Build and test
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          python3 -m pip install psutil
          bash libcxx/utils/ci/run-buildbot ${{ matrix.config }}
      - uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8 # v4.3.0
        if: always()  # Upload artifacts even if the build or test suite fails
        with:
          name: macos-${{ matrix.config }}-results
          path: |
            **/test-results.xml
            **/*.abilist
            **/CMakeError.log
            **/CMakeOutput.log
            **/crash_diagnostics/*
